{"version":3,"sources":["Components/Navigation/ButtonAppBarCollapse.js","Components/Navigation/AppBarCollapse.js","Components/Navigation/Navigation.js","Components/Auth/Login.js","Components/Board/BoardCard.js","Components/Board/AddMember.js","Components/SingleComponents/ButtonGroup.js","Components/SingleComponents/SearchField.js","Components/Board/EditBoard.js","Components/Board/BoardData.js","Components/Sections/AddSection.js","Components/Sections/SectionsCard.js","Components/SingleComponents/ButtonGroupSections.js","Components/Sections/EditSections.js","Components/Sections/SectionsData.js","Components/Students/StudentCard.js","Components/SingleComponents/ButtonGroupStudents.js","Components/Students/EditStudents.js","Components/Students/StudentsData.js","Components/Teachers/TeacherCard.js","Components/Teachers/AddTeacher.js","Components/Teachers/EditTeachers.js","Components/Teachers/TeachersData.js","Components/Panel.js","App.js","serviceWorker.js","index.js"],"names":["ButtonAppBarCollapse","props","handleMenu","event","setState","anchorEl","currentTarget","handleClose","state","bind","classes","this","open","Boolean","className","buttonCollapse","IconButton","onClick","fontSize","htmlColor","Menu","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","children","React","Component","withStyles","theme","breakpoints","up","display","useStyles","makeStyles","title","flexGrow","links","marginRight","textDecoration","color","linksCollapsed","root","position","right","buttonBar","down","logOutHandler","MenuItem","Typography","variant","to","Button","createMuiTheme","palette","primary","main","secondary","Navigation","isLoggedIn","ThemeProvider","AppBar","Toolbar","mainBody","height","justifyContent","alignItems","avatar","backgroundColor","inputField","width","subButton","background","transition","Login","logInHandler","CssBaseline","Grid","container","spacing","direction","justify","item","xs","Avatar","component","TextField","label","name","type","e","form","button","marginBottom","BoardCard","board","onUpdatedDataBase","useState","isInEditMode","setIsInEditMode","toggleIsInEditMode","first_name","last_name","bio","member","setMember","deleteHandler","data","dataJSON","JSON","stringify","axios","method","url","headers","then","response","console","log","catch","error","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","Box","cardTitle","bgcolor","borderRadius","padding","ExpansionPanelDetails","noValidate","autoComplete","p","borderBottom","textAlign","autoFocus","value","onChange","target","bioBox","multiline","rows","fullWidth","bioSection","flexDirection","startIcon","size","confirmAlert","message","buttons","AddMember","placeholder","box","flexWrap","margin","SortButtons","onSortNameAsc","onSortNameDesc","onSortCreatedAsc","onSortCreatedDesc","ButtonGroup","marginTop","marginLeft","SearchField","searchFieldText","query","onSearchSubmit","setError","align","helperText","InputProps","startAdornment","InputAdornment","length","EditBoard","sm","md","lg","xl","map","key","Paper","elevation","BoardData","fetchBoard","newBoard","sort","a","b","nameA","toLowerCase","nameB","numA","numB","search_query","get","res","boardData","fetch","json","AddSection","class_id","class_name","description","date","start_time","end_time","section","setSection","moment","format","SectionsCard","sections","section_name","flexBasis","EditSections","SectionsData","fetchSections","newSections","sectionsData","StudentCard","students","guardian_first_name","guardian_last_name","student_DOB","phone","email","address","city","zip","alt_first_name","alt_last_name","alt_phone","photo_permission","student","setStudent","emails","style","href","EditStudents","StudentsData","fetchStudents","newStudents","studentsData","TeacherCard","teachers","teacher","setTeacher","AddTeacher","EditTeachers","TeachersData","fetchTeachers","newTeachers","teachersData","teacherData","paper","top","bottom","Panel","minHeight","App","preventDefault","ProtectedRoute","rest","render","path","exact","Board","Sections","Students","Teachers","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe8106db.chunk.js","sourcesContent":["import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { Menu } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport PaletteOutlinedIcon from '@material-ui/icons/PaletteOutlined';\n\nconst styles = theme => ({\n  buttonCollapse: {\n    [theme.breakpoints.up('md')]: {\n      display: 'none'\n    },\n    margin: '10px',\n    boxShadow: 'none'\n  }\n});\n\nclass ButtonAppBarCollapse extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null\n    };\n    this.handleMenu = this.handleMenu.bind(this);\n  }\n  handleMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n  render() {\n    const { classes } = this.props;\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n      <div className={classes.buttonCollapse}>\n        <IconButton onClick={this.handleMenu}>\n          <PaletteOutlinedIcon fontSize=\"large\" htmlColor=\"white\" />\n        </IconButton>\n        <Menu\n          id=\"menu-appbar\"\n          anchorEl={anchorEl}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          open={open}\n          onClose={this.handleClose}\n        >\n          {this.props.children}\n        </Menu>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(ButtonAppBarCollapse);\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\n// Material UI stuff\nimport { Button, MenuItem } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport ButtonAppBarCollapse from './ButtonAppBarCollapse';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1\n  },\n  links: {\n    marginRight: '20px',\n    textDecoration: 'none',\n    color: 'white'\n  },\n  linksCollapsed: {\n    color: 'black',\n    marginRight: 'none',\n    textDecoration: 'none'\n  }\n}));\n\nconst styles = theme => ({\n  root: {\n    position: 'absolute',\n    right: 0\n  },\n  buttonBar: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    },\n    display: 'flex',\n    marginRight: '20px'\n  }\n});\n\nconst AppBarCollapse = props => {\n  const { logOutHandler } = props;\n  const classes = useStyles();\n  return (\n    <div className={props.classes.root}>\n      <ButtonAppBarCollapse logOutHandler={logOutHandler}>\n        <MenuItem>\n          <Typography variant=\"h6\">\n            <Link to=\"/panel/classes\" className={classes.linksCollapsed}>\n              Classes\n            </Link>\n          </Typography>\n        </MenuItem>\n\n        <MenuItem>\n          <Typography variant=\"h6\">\n            <Link to=\"/panel/students\" className={classes.linksCollapsed}>\n              Students\n            </Link>\n          </Typography>\n        </MenuItem>\n\n        <MenuItem>\n          <Typography variant=\"h6\">\n            <Link to=\"/panel/teachers\" className={classes.linksCollapsed}>\n              Teachers\n            </Link>\n          </Typography>\n        </MenuItem>\n\n        <MenuItem>\n          <Typography variant=\"h6\">\n            <Link to=\"/panel/board\" className={classes.linksCollapsed}>\n              Board\n            </Link>\n          </Typography>\n        </MenuItem>\n\n        <MenuItem>\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => logOutHandler(() => <Redirect to=\"/admin\" />)}\n          >\n            LOG OUT\n          </Button>\n        </MenuItem>\n      </ButtonAppBarCollapse>\n      <div className={props.classes.buttonBar} id=\"appbar-collapse\">\n        <Typography variant=\"h6\">\n          <Link to=\"/panel/classes\" className={classes.links}>\n            Classes\n          </Link>\n        </Typography>\n        <Typography variant=\"h6\">\n          <Link to=\"/panel/students\" className={classes.links}>\n            Students\n          </Link>\n        </Typography>\n        <Typography variant=\"h6\">\n          <Link to=\"/panel/teachers\" className={classes.links}>\n            Teachers\n          </Link>\n        </Typography>\n        <Typography variant=\"h6\">\n          <Link to=\"/panel/board\" className={classes.links}>\n            Board\n          </Link>\n        </Typography>\n        <Button\n          variant=\"outlined\"\n          color=\"inherit\"\n          onClick={() => logOutHandler(() => <Redirect to=\"/admin\" />)}\n        >\n          LOG OUT\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(AppBarCollapse);\n","import React from 'react';\n\nimport AppBarCollapse from './AppBarCollapse';\n\n// Material UI stuff\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#679488'\n    },\n    secondary: {\n      main: '#DC6866'\n    }\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1\n  },\n  links: {\n    marginRight: '20px',\n    textDecoration: 'none',\n    color: 'white'\n  }\n}));\n\nfunction Navigation(props) {\n  const { isLoggedIn, logOutHandler } = props;\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <Typography variant=\"h5\" className={classes.title}>\n            ArtFrog Academy\n          </Typography>\n          {isLoggedIn && (\n            <>\n              <AppBarCollapse logOutHandler={logOutHandler} />\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n    </ThemeProvider>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { Redirect } from 'react-router-dom';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#679488'\n    },\n    secondary: {\n      main: '#AD7994'\n    }\n  }\n});\n\nconst useStyles = makeStyles({\n  mainBody: {\n    height: '75vh',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n\n  avatar: {\n    backgroundColor: '#DC6866'\n  },\n\n  inputField: {\n    width: '300px'\n  },\n\n  subButton: {\n    backgroundColor: '#DC6866',\n    width: '300px',\n    '&:hover': {\n      background: '#679488',\n      transition: '.4s'\n    }\n  }\n});\n\nconst Login = props => {\n  const { logInHandler, isLoggedIn } = props;\n  const classes = useStyles();\n  return (\n    <>\n      <CssBaseline />\n      {isLoggedIn ? (\n        <Redirect to=\"/panel\" />\n      ) : (\n        <div className={classes.mainBody}>\n          <form className=\"formBox\">\n            <div>\n              <Grid\n                container\n                spacing={2}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n              >\n                <Grid item xs={12}>\n                  <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                  </Avatar>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography component=\"h1\" variant=\"h4\">\n                    Log In\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <ThemeProvider theme={theme}>\n                    <TextField\n                      variant=\"outlined\"\n                      label=\"User Name\"\n                      name=\"username\"\n                      className={classes.inputField}\n                    />\n                  </ThemeProvider>\n                </Grid>\n                <Grid item xs={12}>\n                  <ThemeProvider theme={theme}>\n                    <TextField\n                      variant=\"outlined\"\n                      label=\"Password\"\n                      name=\"password\"\n                      className={classes.inputField}\n                    />\n                  </ThemeProvider>\n                </Grid>\n                <Grid item xs={12}>\n                  <Button\n                    variant=\"contained\"\n                    type=\"submit\"\n                    color=\"primary\"\n                    className={classes.subButton}\n                    onClick={e => logInHandler(e)}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </form>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport {\n  Typography,\n  CssBaseline,\n  Button,\n  Box,\n  TextField\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nconst useStyles = makeStyles({\n  form: {\n    width: '100vw'\n  },\n  button: {\n    marginBottom: '15px',\n    width: '240px'\n  }\n});\n\nconst BoardCard = props => {\n  const { board, onUpdatedDataBase } = props;\n\n  const classes = useStyles();\n\n  // Edit State\n  const [isInEditMode, setIsInEditMode] = useState(false);\n  const toggleIsInEditMode = () => setIsInEditMode(!isInEditMode);\n\n  // Local Board Members Info State\n  const [member, setMember] = useState({\n    first_name: board.first_name,\n    last_name: board.last_name,\n    bio: board.bio,\n    id: board.id\n  });\n\n  const cancelHandler = e => {\n    setMember({\n      ...member,\n      first_name: board.first_name,\n      last_name: board.last_name,\n      bio: board.bio,\n      id: board.id\n    });\n    toggleIsInEditMode();\n  };\n\n  const saveHandler = e => {\n    const { first_name, last_name, bio, id } = member;\n    const data = {\n      first_name: first_name,\n      last_name: last_name,\n      bio: bio,\n      id: id\n    };\n    const dataJSON = JSON.stringify(data);\n    // console.log('UPDATE SAVE: ', data);\n    axios({\n      method: 'put',\n      url: 'http://localhost:80/about',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: dataJSON\n    })\n      .then(function(response) {\n        console.log(response);\n        toggleIsInEditMode();\n        onUpdatedDataBase();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  const deleteConfirmation = e => {\n    confirmAlert({\n      title: 'Confirm to Delete',\n      message: 'Are you sure?',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: e => deleteHandler(e)\n        },\n        {\n          label: 'No',\n          onClick: () => {}\n        }\n      ]\n    });\n  };\n\n  const deleteHandler = e => {\n    const { id } = board;\n    const data = {\n      id: id\n    };\n    const dataJSON = JSON.stringify(data);\n\n    axios({\n      method: 'delete',\n      url: 'http://localhost:80/about',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: dataJSON\n    })\n      .then(function(response) {\n        console.log(response);\n        onUpdatedDataBase();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      <CssBaseline>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Box\n              className={classes.cardTitle}\n              bgcolor=\"rgba(186, 130, 159, .2)\"\n              borderRadius=\"8px\"\n              padding={3}\n              display=\"flex\"\n              justifyContent=\"center\"\n              flexGrow={1}\n            >\n              <Typography variant=\"h4\">\n                {board.first_name} {board.last_name}\n              </Typography>\n            </Box>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails display=\"flex\">\n            <form className={classes.form} noValidate autoComplete=\"off\">\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>First Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"First Name\"\n                      variant=\"outlined\"\n                      autoFocus={true}\n                      value={member.first_name}\n                      onChange={e =>\n                        setMember({ ...member, first_name: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>First Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{board.first_name}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>First Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Last Name\"\n                      variant=\"outlined\"\n                      value={member.last_name}\n                      onChange={e =>\n                        setMember({ ...member, last_name: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Last Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box>\n                    <Typography variant=\"h6\">{board.last_name}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                  className={classes.bioBox}\n                  flexGrow={1}\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Bio: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      multiline={true}\n                      rows={3}\n                      fullWidth={true}\n                      className={classes.bioSection}\n                      label=\"Bio\"\n                      variant=\"outlined\"\n                      value={member.bio}\n                      onChange={e =>\n                        setMember({ ...member, bio: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  flexDirection=\"column\"\n                  alignItems=\"flex-start\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Bio: </strong>\n                    </Typography>\n                  </Box>\n                  <Box variant=\"h6\" flexGrow={1} textAlign=\"left\" padding={1}>\n                    <Typography>{board.bio}</Typography>\n                  </Box>\n                </Box>\n              )}\n              {isInEditMode ? (\n                <Box padding={2} display=\"flex\" flexDirection=\"column\">\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<CancelOutlinedIcon />}\n                    onClick={e => cancelHandler(e)}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<SaveAltIcon />}\n                    onClick={saveHandler}\n                  >\n                    Save\n                  </Button>\n                </Box>\n              ) : (\n                <Box padding={2} display=\"flex\" flexDirection=\"column\">\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<EditIcon />}\n                    onClick={toggleIsInEditMode}\n                  >\n                    Edit\n                  </Button>\n                  <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<DeleteIcon />}\n                    className={classes.button}\n                    onClick={deleteConfirmation}\n                  >\n                    Delete {board.first_name} {board.last_name}\n                  </Button>\n                </Box>\n              )}\n            </form>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </CssBaseline>\n    </>\n  );\n};\n\nexport default BoardCard;\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\n// Material UI\nimport {\n  Typography,\n  CssBaseline,\n  Button,\n  Box,\n  TextField\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles({\n  form: {\n    width: '100%'\n  },\n  button: {\n    marginBottom: '15px',\n    width: '240px'\n  }\n});\n\nconst AddMember = props => {\n  const { onUpdatedDataBase } = props;\n  const classes = useStyles();\n\n  const [member, setMember] = useState({\n    first_name: '',\n    last_name: '',\n    bio: ''\n  });\n\n  const saveHandler = e => {\n    const { first_name, last_name, bio } = member;\n    const data = {\n      first_name: first_name,\n      last_name: last_name,\n      bio: bio\n    };\n    const dataJSON = JSON.stringify(data);\n    console.log(data);\n\n    axios({\n      method: 'post',\n      url: 'http://localhost:80/about',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: dataJSON\n    })\n      .then(function(response) {\n        console.log(response);\n        setMember({ first_name: '', last_name: '', bio: '' });\n        onUpdatedDataBase();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      <CssBaseline>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Box\n              className={classes.cardTitle}\n              bgcolor=\"rgba(186, 130, 159, .2)\"\n              borderRadius=\"8px\"\n              padding={3}\n              display=\"flex\"\n              justifyContent=\"center\"\n              flexGrow={1}\n            >\n              <Typography variant=\"h4\">Add A Board Member</Typography>\n            </Box>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <form className={classes.form} noValidate autoComplete=\"off\">\n              <Box\n                p={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                borderBottom=\"1px solid grey\"\n              >\n                <Box marginRight=\"10px\">\n                  <Typography variant=\"h6\">\n                    <strong>First Name: </strong>\n                  </Typography>\n                </Box>\n                <Box flexGrow={1} textAlign=\"left\">\n                  <TextField\n                    label=\"First Name\"\n                    variant=\"outlined\"\n                    autoFocus={true}\n                    value={member.first_name}\n                    onChange={e =>\n                      setMember({ ...member, first_name: e.target.value })\n                    }\n                    placeholder=\"First Name\"\n                  />\n                </Box>\n              </Box>\n              <Box\n                p={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                borderBottom=\"1px solid grey\"\n              >\n                <Box marginRight=\"10px\">\n                  <Typography variant=\"h6\">\n                    <strong>Last Name: </strong>\n                  </Typography>\n                </Box>\n                <Box flexGrow={1} textAlign=\"left\">\n                  <TextField\n                    label=\"Last Name\"\n                    variant=\"outlined\"\n                    autoFocus={true}\n                    value={member.last_name}\n                    onChange={e =>\n                      setMember({ ...member, last_name: e.target.value })\n                    }\n                    placeholder=\"Last Name\"\n                  />\n                </Box>\n              </Box>\n\n              <Box\n                p={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                borderBottom=\"1px solid grey\"\n                className={classes.bioBox}\n                flexGrow={1}\n              >\n                <Box marginRight=\"10px\">\n                  <Typography variant=\"h6\">\n                    <strong>Bio: </strong>\n                  </Typography>\n                </Box>\n                <Box flexGrow={1} textAlign=\"left\">\n                  <TextField\n                    multiline={true}\n                    rows={3}\n                    fullWidth\n                    className={classes.bioSection}\n                    label=\"Bio\"\n                    variant=\"outlined\"\n                    autoFocus={true}\n                    value={member.bio}\n                    onChange={e =>\n                      setMember({ ...member, bio: e.target.value })\n                    }\n                    placeholder=\"Bio\"\n                  />\n                </Box>\n              </Box>\n\n              <Box padding={2}>\n                <Button\n                  size=\"large\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  startIcon={<SaveAltIcon />}\n                  className={classes.button}\n                  onClick={saveHandler}\n                >\n                  Save New Member\n                </Button>\n              </Box>\n            </form>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </CssBaseline>\n    </>\n  );\n};\n\nexport default AddMember;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  box: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    margin: '15px'\n  }\n});\n\nexport default function SortButtons(props) {\n  const classes = useStyles();\n  const {\n    onSortNameAsc,\n    onSortNameDesc,\n    onSortCreatedAsc,\n    onSortCreatedDesc,\n    onUpdatedDataBase\n  } = props;\n\n  return (\n    <div>\n      <ButtonGroup className={classes.box} color=\"primary\">\n        <Button onClick={onSortNameAsc}>Last Name ↑</Button>\n        <Button onClick={onSortNameDesc}>Last Name ↓</Button>\n        <Button onClick={onSortCreatedAsc}>Created ↑</Button>\n        <Button onClick={onSortCreatedDesc}>Created ↓</Button>\n        <Button onClick={onUpdatedDataBase}>Reload</Button>\n      </ButtonGroup>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { TextField, Box, Button } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(5)\n  },\n  subButton: {\n    marginLeft: 5,\n    height: 55\n  }\n}));\n\nexport default function SearchField(props) {\n  const classes = useStyles();\n  const { searchFieldText, query, onSearchSubmit } = props;\n\n  const [error, setError] = useState(false);\n\n  const clickHandler = () => {\n    if (query.length < 3) {\n      setError(true);\n    } else {\n      setError(false);\n      onSearchSubmit();\n    }\n  };\n\n  return (\n    <div>\n      <Box className={classes.root} display=\"flex\" align=\"center\" width=\"75vw\">\n        {error ? (\n          <TextField\n            fullWidth\n            error\n            value={query}\n            helperText=\"Enter at least 3 letters.\"\n            variant=\"outlined\"\n            onChange={e => searchFieldText(e)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              )\n            }}\n          />\n        ) : (\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            placeholder=\"Search By Name\"\n            value={query}\n            onChange={e => searchFieldText(e)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              )\n            }}\n          />\n        )}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          className={classes.subButton}\n          onClick={clickHandler}\n        >\n          Submit\n        </Button>\n      </Box>\n    </div>\n  );\n}\n","import React from 'react';\nimport BoardCard from './BoardCard';\nimport AddMember from './AddMember';\nimport ButtonGroup from '../SingleComponents/ButtonGroup';\nimport SearchField from '../SingleComponents/SearchField';\n\n// Material UI\nimport { Grid, CssBaseline, Box, Paper, Typography } from '@material-ui/core';\n\nconst EditBoard = props => {\n  const {\n    board,\n    onUpdatedDataBase,\n    onSortNameAsc,\n    onSortNameDesc,\n    onSortCreatedAsc,\n    onSortCreatedDesc,\n    searchFieldText,\n    query,\n    onSearchSubmit\n  } = props;\n\n  return (\n    <div>\n      <CssBaseline>\n        <Grid container display=\"flex\" direction=\"column\" alignItems=\"center\">\n          <SearchField\n            searchFieldText={searchFieldText}\n            board={board}\n            query={query}\n            onSearchSubmit={onSearchSubmit}\n          />\n\n          <ButtonGroup\n            onSortNameAsc={onSortNameAsc}\n            onSortNameDesc={onSortNameDesc}\n            onSortCreatedAsc={onSortCreatedAsc}\n            onSortCreatedDesc={onSortCreatedDesc}\n            onUpdatedDataBase={onUpdatedDataBase}\n          />\n\n          <Grid item align=\"center\" xs={12} sm={10} md={8} lg={8} xl={8}>\n            <AddMember onUpdatedDataBase={onUpdatedDataBase} />\n            {board.length > 0 ? (\n              <>\n                {board.map(member => (\n                  <BoardCard\n                    key={member.id}\n                    board={member}\n                    onUpdatedDataBase={onUpdatedDataBase}\n                  />\n                ))}\n              </>\n            ) : (\n              <Box marginTop=\"30px\">\n                <Paper elevation={4}>\n                  <Typography variant=\"h5\">\n                    No results. Try your Search Again\n                  </Typography>\n                </Paper>\n              </Box>\n            )}\n          </Grid>\n        </Grid>\n      </CssBaseline>\n    </div>\n  );\n};\n\nexport default EditBoard;\n","import React from 'react';\nimport EditBoard from './EditBoard';\nimport axios from 'axios';\n\nclass BoardData extends React.Component {\n  state = {\n    board: [],\n    query: ''\n  };\n\n  componentDidMount() {\n    this.fetchBoard();\n  }\n\n  onUpdatedDataBase = () => {\n    this.fetchBoard();\n  };\n\n  async fetchBoard() {\n    try {\n      const url = 'http://localhost:80/aboutCMS';\n      const response = await fetch(url);\n      const data = await response.json();\n      // console.log(data);\n      const boardData = data.board.map(member => ({\n        id: member.id,\n        first_name: member.first_name,\n        last_name: member.last_name,\n        bio: member.bio\n      }));\n      // console.log('board fetch: ', boardData);\n      this.setState({ board: boardData });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  onSortNameAsc = () => {\n    let newBoard = [...this.state.board];\n    newBoard.sort(function(a, b) {\n      let nameA = a.last_name.toLowerCase();\n      let nameB = b.last_name.toLowerCase();\n      if (nameA > nameB) {\n        return 1;\n      }\n      if (nameA < nameB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ board: newBoard });\n  };\n\n  onSortNameDesc = () => {\n    let newBoard = [...this.state.board];\n    newBoard.sort(function(a, b) {\n      let nameA = a.last_name.toLowerCase();\n      let nameB = b.last_name.toLowerCase();\n      if (nameA < nameB) {\n        return 1;\n      }\n      if (nameA > nameB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ board: newBoard });\n  };\n\n  onSortCreatedAsc = () => {\n    let newBoard = [...this.state.board];\n    newBoard.sort(function(a, b) {\n      let numA = a.id;\n      let numB = b.id;\n      if (numA > numB) {\n        return 1;\n      }\n      if (numA < numB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ board: newBoard });\n  };\n\n  onSortCreatedDesc = () => {\n    let newBoard = [...this.state.board];\n    newBoard.sort(function(a, b) {\n      let numA = a.id;\n      let numB = b.id;\n      if (numA < numB) {\n        return 1;\n      }\n      if (numA > numB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ board: newBoard });\n  };\n\n  searchFieldText = e => {\n    this.setState({ query: e.target.value });\n  };\n\n  onSearchSubmit = e => {\n    this.setState({ board: [] });\n    const search_query = this.state.query;\n    axios.get(`http://localhost:80/aboutQuery?q=${search_query}`).then(res => {\n      // console.log(res);\n      const boardData = res.data.board.map(member => ({\n        id: member.id,\n        first_name: member.first_name,\n        last_name: member.last_name,\n        bio: member.bio\n      }));\n      // console.log('board fetch: ', boardData);\n      this.setState({ board: boardData });\n      this.setState({ query: '' });\n    });\n  };\n\n  render() {\n    const { board, query } = this.state;\n    // console.log('in render: ', board);\n    return (\n      <div>\n        <EditBoard\n          board={board}\n          onUpdatedDataBase={this.onUpdatedDataBase}\n          onSortNameAsc={this.onSortNameAsc}\n          onSortNameDesc={this.onSortNameDesc}\n          onSortCreatedAsc={this.onSortCreatedAsc}\n          onSortCreatedDesc={this.onSortCreatedDesc}\n          searchFieldText={this.searchFieldText}\n          onSearchSubmit={this.onSearchSubmit}\n          query={query}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BoardData;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\n\n// Material UI\nimport {\n  Typography,\n  CssBaseline,\n  Button,\n  Box,\n  TextField\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles({\n  form: {\n    width: '100%'\n  },\n  button: {\n    marginBottom: '15px',\n    width: '240px'\n  }\n});\n\nconst AddSection = props => {\n  const { onUpdatedDataBase } = props;\n  const classes = useStyles();\n\n  // Local Section Info State\n  const [section, setSection] = useState({\n    class_id: '',\n    class_name: '',\n    description: '',\n    date: '',\n    start_time: '',\n    end_time: ''\n  });\n\n  const saveHandler = e => {\n    const data = {\n      class_name: section.class_name,\n      description: section.description,\n      date: moment(section.date).format('YYYY-MM-DD'),\n      start_time: section.start_time,\n      end_time: section.end_time\n    };\n    const dataJSON = JSON.stringify(data);\n    console.log('UPDATE SAVE: ', data);\n    axios({\n      method: 'post',\n      url: 'http://localhost:80/classes',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: dataJSON\n    })\n      .then(function(response) {\n        console.log(response);\n        onUpdatedDataBase();\n        setSection({\n          class_id: '',\n          class_name: '',\n          description: '',\n          date: '',\n          start_time: '',\n          end_time: ''\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      <CssBaseline>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Box\n              className={classes.cardTitle}\n              bgcolor=\"rgba(186, 130, 159, .2)\"\n              borderRadius=\"8px\"\n              padding={3}\n              display=\"flex\"\n              justifyContent=\"center\"\n              flexGrow={1}\n            >\n              <Typography variant=\"h4\">Add A Class</Typography>\n            </Box>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails display=\"flex\">\n            <form className={classes.form} noValidate autoComplete=\"off\">\n              <Box\n                p={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                borderBottom=\"1px solid grey\"\n              >\n                <Box marginRight=\"10px\">\n                  <Typography variant=\"h6\">\n                    <strong>Class Name: </strong>\n                  </Typography>\n                </Box>\n                <Box flexGrow={1} textAlign=\"left\">\n                  <TextField\n                    label=\"Class Name\"\n                    variant=\"outlined\"\n                    autoFocus={true}\n                    value={section.class_name}\n                    onChange={e =>\n                      setSection({ ...section, class_name: e.target.value })\n                    }\n                  />\n                </Box>\n              </Box>\n\n              <Box\n                p={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                borderBottom=\"1px solid grey\"\n              >\n                <Box marginRight=\"10px\">\n                  <Typography variant=\"h6\">\n                    <strong>Description: </strong>\n                  </Typography>\n                </Box>\n                <Box flexGrow={1} textAlign=\"left\">\n                  <TextField\n                    multiline={true}\n                    rows={3}\n                    fullWidth={true}\n                    label=\"Description\"\n                    variant=\"outlined\"\n                    value={section.description}\n                    onChange={e =>\n                      setSection({ ...section, description: e.target.value })\n                    }\n                  />\n                </Box>\n              </Box>\n\n              <Box\n                p={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                borderBottom=\"1px solid grey\"\n              >\n                <Box marginRight=\"10px\">\n                  <Typography variant=\"h6\">\n                    <strong>Start Date: </strong>\n                  </Typography>\n                </Box>\n                <Box flexGrow={1} textAlign=\"left\">\n                  <TextField\n                    variant=\"outlined\"\n                    type=\"date\"\n                    value={section.date}\n                    onChange={e =>\n                      setSection({ ...section, date: e.target.value })\n                    }\n                  />\n                </Box>\n              </Box>\n\n              <Box\n                p={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                borderBottom=\"1px solid grey\"\n              >\n                <Box marginRight=\"10px\">\n                  <Typography variant=\"h6\">\n                    <strong>Start Time: </strong>\n                  </Typography>\n                </Box>\n                <Box flexGrow={1} textAlign=\"left\">\n                  <TextField\n                    variant=\"outlined\"\n                    type=\"time\"\n                    value={section.start_time}\n                    onChange={e =>\n                      setSection({ ...section, start_time: e.target.value })\n                    }\n                  />\n                </Box>\n              </Box>\n\n              <Box\n                p={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                borderBottom=\"1px solid grey\"\n              >\n                <Box marginRight=\"10px\">\n                  <Typography variant=\"h6\">\n                    <strong>End Time: </strong>\n                  </Typography>\n                </Box>\n                <Box flexGrow={1} textAlign=\"left\">\n                  <TextField\n                    variant=\"outlined\"\n                    type=\"time\"\n                    value={section.end_time}\n                    onChange={e =>\n                      setSection({ ...section, end_time: e.target.value })\n                    }\n                  />\n                </Box>\n              </Box>\n\n              <Box padding={2} display=\"flex\" flexDirection=\"column\">\n                <Button\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  className={classes.button}\n                  startIcon={<SaveAltIcon />}\n                  onClick={saveHandler}\n                >\n                  Save\n                </Button>\n              </Box>\n            </form>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </CssBaseline>\n    </>\n  );\n};\n\nexport default AddSection;\n","import React, { useState } from 'react';\nimport moment from 'moment';\nimport axios from 'axios';\n\nimport {\n  Typography,\n  CssBaseline,\n  Button,\n  Box,\n  TextField\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nconst useStyles = makeStyles({\n  form: {\n    width: '100vw'\n  },\n  button: {\n    marginBottom: '15px',\n    width: '240px'\n  }\n});\n\nconst SectionsCard = props => {\n  const { sections, onUpdatedDataBase } = props;\n  // console.log(sections);\n  const classes = useStyles();\n\n  // Edit State\n  const [isInEditMode, setIsInEditMode] = useState(false);\n  const toggleIsInEditMode = () => setIsInEditMode(!isInEditMode);\n\n  // Local Section Info State\n  const [section, setSection] = useState({\n    class_id: sections.id,\n    class_name: sections.section_name,\n    description: sections.description,\n    date: sections.date,\n    start_time: sections.start_time,\n    end_time: sections.end_time\n  });\n\n  const cancelHandler = e => {\n    setSection({\n      ...section,\n      class_id: sections.id,\n      class_name: sections.section_name,\n      description: sections.description,\n      date: sections.date,\n      start_time: sections.start_time,\n      end_time: sections.end_time\n    });\n    toggleIsInEditMode();\n  };\n\n  const saveHandler = e => {\n    const data = {\n      class_id: section.class_id,\n      class_name: section.class_name,\n      description: section.description,\n      date: moment(section.date).format('YYYY-MM-DD'),\n      start_time: section.start_time,\n      end_time: section.end_time\n    };\n    const dataJSON = JSON.stringify(data);\n    console.log('UPDATE SAVE: ', data);\n    axios({\n      method: 'put',\n      url: 'http://localhost:80/classes',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: dataJSON\n    })\n      .then(function(response) {\n        console.log(response);\n        toggleIsInEditMode();\n        onUpdatedDataBase();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  const deleteConfirmation = e => {\n    confirmAlert({\n      title: 'Confirm to Delete',\n      message: 'Are you sure?',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: e => deleteHandler(e)\n        },\n        {\n          label: 'No',\n          onClick: () => {}\n        }\n      ]\n    });\n  };\n\n  const deleteHandler = e => {\n    const data = {\n      class_id: section.class_id\n    };\n    const dataJSON = JSON.stringify(data);\n    // console.log(dataJSON);z\n    axios({\n      method: 'delete',\n      url: 'http://localhost:80/classes',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: dataJSON\n    })\n      .then(function(response) {\n        console.log(response);\n        onUpdatedDataBase();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      <CssBaseline>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Box\n              className={classes.cardTitle}\n              bgcolor=\"rgba(186, 130, 159, .2)\"\n              borderRadius=\"8px\"\n              padding={3}\n              display=\"flex\"\n              justifyContent=\"space-around\"\n              alignItems=\"center\"\n              flexGrow={1}\n              flexWrap=\"wrap\"\n            >\n              <Box display=\"flex\" flexBasis=\"10%\" justifyContent=\"flex-end\">\n                <Typography variant=\"h4\">{sections.section_name}</Typography>\n              </Box>\n\n              <Box>\n                <Typography variant=\"h6\">Date: {sections.date}</Typography>\n                <Typography variant=\"h6\">\n                  Start Time: {sections.start_time || 'None Given'}\n                </Typography>\n              </Box>\n            </Box>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails display=\"flex\">\n            <form className={classes.form} noValidate autoComplete=\"off\">\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Class Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Class Name\"\n                      variant=\"outlined\"\n                      autoFocus={true}\n                      value={section.class_name}\n                      onChange={e =>\n                        setSection({ ...section, class_name: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Class Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">\n                      {sections.section_name}\n                    </Typography>\n                  </Box>\n                </Box>\n              )}\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                  flexGrow={1}\n                >\n                  <Box\n                    flexGrow={1}\n                    marginRight=\"10px\"\n                    textAlign=\"left\"\n                    marginBottom=\"2px\"\n                    spacing={2}\n                  >\n                    <Typography variant=\"h6\">\n                      <strong>Description: </strong>\n                    </Typography>\n                    <Box textAlign=\"left\">\n                      <TextField\n                        multiline={true}\n                        fullWidth={true}\n                        label=\"Description\"\n                        variant=\"outlined\"\n                        value={section.description}\n                        onChange={e =>\n                          setSection({\n                            ...section,\n                            description: e.target.value\n                          })\n                        }\n                      />\n                    </Box>\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  direction=\"column\"\n                  alignItems=\"flex-start\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\" textAlign=\"left\">\n                    <Typography variant=\"h6\">\n                      <strong>Description: </strong>\n                    </Typography>\n                    <Box variant=\"h6\" flexGrow={1} textAlign=\"left\">\n                      <Typography>{sections.description}</Typography>\n                    </Box>\n                  </Box>\n                </Box>\n              )}\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Start Date: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Date\"\n                      variant=\"outlined\"\n                      value={section.date}\n                      onChange={e =>\n                        setSection({ ...section, date: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Date: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{sections.date}</Typography>\n                  </Box>\n                </Box>\n              )}\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Start Time: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Start Time\"\n                      variant=\"outlined\"\n                      value={section.start_time}\n                      onChange={e =>\n                        setSection({ ...section, start_time: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Start Time: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{sections.start_time}</Typography>\n                  </Box>\n                </Box>\n              )}\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>End Time: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"End Time\"\n                      variant=\"outlined\"\n                      value={section.end_time}\n                      onChange={e =>\n                        setSection({ ...section, end_time: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>End Time: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{sections.end_time}</Typography>\n                  </Box>\n                </Box>\n              )}\n              {isInEditMode ? (\n                <Box padding={2} display=\"flex\" flexDirection=\"column\">\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<CancelOutlinedIcon />}\n                    onClick={e => cancelHandler(e)}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<SaveAltIcon />}\n                    onClick={saveHandler}\n                  >\n                    Save\n                  </Button>\n                </Box>\n              ) : (\n                <Box padding={2} display=\"flex\" flexDirection=\"column\">\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<EditIcon />}\n                    onClick={toggleIsInEditMode}\n                  >\n                    Edit\n                  </Button>\n                  <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<DeleteIcon />}\n                    className={classes.button}\n                    onClick={deleteConfirmation}\n                  >\n                    Delete {section.class_name}\n                  </Button>\n                </Box>\n              )}\n            </form>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </CssBaseline>\n    </>\n  );\n};\n\nexport default SectionsCard;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  box: {\n    display: 'flex',\n    flexGrow: '1',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    margin: '20px'\n  }\n});\n\nexport default function SortButtons(props) {\n  const classes = useStyles();\n  const {\n    onSortNameAsc,\n    onSortNameDesc,\n    onSortCreatedAsc,\n    onSortCreatedDesc,\n    onUpdatedDataBase\n  } = props;\n\n  return (\n    <div>\n      <ButtonGroup className={classes.box} color=\"primary\">\n        <Button onClick={onSortNameAsc}>Class Name ↑</Button>\n        <Button onClick={onSortNameDesc}>Class Date ↑</Button>\n        <Button onClick={onSortCreatedAsc}>Created ↑</Button>\n        <Button onClick={onSortCreatedDesc}>Created ↓</Button>\n        <Button onClick={onUpdatedDataBase}>Reload</Button>\n      </ButtonGroup>\n    </div>\n  );\n}\n","import React from 'react';\nimport AddSection from './AddSection';\nimport SectionsCard from './SectionsCard';\nimport ButtonGroup from '../SingleComponents/ButtonGroupSections';\nimport SearchField from '../SingleComponents/SearchField';\n\n// Material UI\nimport { Grid, CssBaseline, Box, Paper, Typography } from '@material-ui/core';\nconst EditSections = props => {\n  const {\n    sections,\n    onUpdatedDataBase,\n    onSortNameAsc,\n    onSortNameDesc,\n    onSortCreatedAsc,\n    onSortCreatedDesc,\n    searchFieldText,\n    onSearchSubmit,\n    query\n  } = props;\n\n  return (\n    <div>\n      <CssBaseline>\n        <Grid container display=\"flex\" direction=\"column\" alignItems=\"center\">\n          <Grid item>\n            <SearchField\n              searchFieldText={searchFieldText}\n              sections={sections}\n              onSearchSubmit={onSearchSubmit}\n              query={query}\n            />\n          </Grid>\n\n          <ButtonGroup\n            onSortNameAsc={onSortNameAsc}\n            onSortNameDesc={onSortNameDesc}\n            onSortCreatedAsc={onSortCreatedAsc}\n            onSortCreatedDesc={onSortCreatedDesc}\n            sections={sections}\n            onUpdatedDataBase={onUpdatedDataBase}\n          />\n          <Grid item align=\"center\" xs={12} sm={10} md={8} lg={8} xl={8}>\n            <AddSection onUpdatedDataBase={onUpdatedDataBase} />\n\n            {sections.length > 0 ? (\n              <>\n                {sections.map(section => (\n                  <SectionsCard\n                    key={section.id}\n                    sections={section}\n                    onUpdatedDataBase={onUpdatedDataBase}\n                  />\n                ))}\n              </>\n            ) : (\n              <Box marginTop=\"30px\">\n                <Paper elevation={4}>\n                  <Typography variant=\"h5\">\n                    No results. Try your Search Again\n                  </Typography>\n                </Paper>\n              </Box>\n            )}\n          </Grid>\n        </Grid>\n      </CssBaseline>\n    </div>\n  );\n};\n\nexport default EditSections;\n","import React from 'react';\nimport EditSections from '../Sections/EditSections';\nimport axios from 'axios';\nimport moment from 'moment';\n\nclass SectionsData extends React.Component {\n  state = {\n    sections: [],\n    query: ''\n  };\n\n  componentDidMount() {\n    this.fetchSections();\n  }\n\n  onUpdatedDataBase = () => {\n    this.fetchSections();\n  };\n\n  async fetchSections() {\n    try {\n      // const query = xyz\n      const url = 'http://localhost:80/classesCMS';\n      const response = await fetch(url);\n      // console.log('fetchSections response', response);\n      const data = await response.json();\n      // console.log('fetch data', data);\n      const sectionsData = data.classes.map(section => ({\n        id: section.class_id,\n        section_name: section.class_name,\n        description: section.description,\n        date: moment(section.date).format('MM-DD-YYYY'),\n        start_time: section.start_time,\n        end_time: section.end_time\n      }));\n      // console.log('local data', SectionsData);\n      this.setState({ sections: sectionsData });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  onSortNameAsc = () => {\n    let newSections = [...this.state.sections];\n    newSections.sort(function(a, b) {\n      let nameA = a.section_name.toLowerCase();\n      let nameB = b.section_name.toLowerCase();\n      if (nameA > nameB) {\n        return 1;\n      }\n      if (nameA < nameB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newSections);\n    this.setState({ sections: newSections });\n  };\n\n  onSortNameDesc = () => {\n    let newSections = [...this.state.sections];\n    newSections.sort(function(a, b) {\n      let nameA = a.date.toLowerCase();\n      let nameB = b.date.toLowerCase();\n      if (nameA < nameB) {\n        return 1;\n      }\n      if (nameA > nameB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newSections);\n    this.setState({ sections: newSections });\n  };\n\n  onSortCreatedAsc = () => {\n    let newSections = [...this.state.sections];\n    newSections.sort(function(a, b) {\n      let numA = a.id;\n      let numB = b.id;\n      if (numA > numB) {\n        return 1;\n      }\n      if (numA < numB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ sections: newSections });\n  };\n\n  onSortCreatedDesc = () => {\n    let newSections = [...this.state.sections];\n    newSections.sort(function(a, b) {\n      let numA = a.id;\n      let numB = b.id;\n      if (numA < numB) {\n        return 1;\n      }\n      if (numA > numB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newSections);\n    this.setState({ sections: newSections });\n  };\n\n  searchFieldText = e => {\n    this.setState({ query: e.target.value });\n  };\n\n  onSearchSubmit = e => {\n    this.setState({ sections: [] });\n    const search_query = this.state.query;\n    axios\n      .get(`http://localhost:80/classesQuery?q=${search_query}`)\n      .then(res => {\n        console.log(res);\n        const sectionsData = res.data.classes.map(section => ({\n          id: section.class_id,\n          section_name: section.class_name,\n          description: section.description,\n          date: moment(section.date).format('MM-DD-YYYY'),\n          start_time: section.start_time,\n          end_time: section.end_time\n        }));\n        // console.log('board fetch: ', boardData);\n        this.setState({ sections: sectionsData });\n        this.setState({ query: '' });\n      });\n  };\n\n  render() {\n    const { sections, query } = this.state;\n\n    // let filteredSections = sections.filter(section => {\n    //   return section.last_name.indexOf(this.state.query) !== -1;\n    // });\n\n    return (\n      <div>\n        <EditSections\n          sections={sections}\n          onUpdatedDataBase={this.onUpdatedDataBase}\n          onSortNameAsc={this.onSortNameAsc}\n          onSortNameDesc={this.onSortNameDesc}\n          onSortCreatedAsc={this.onSortCreatedAsc}\n          onSortCreatedDesc={this.onSortCreatedDesc}\n          searchFieldText={this.searchFieldText}\n          onSearchSubmit={this.onSearchSubmit}\n          query={query}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SectionsData;\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport {\n  Typography,\n  CssBaseline,\n  Button,\n  Box,\n  TextField\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nconst useStyles = makeStyles({\n  form: {\n    width: '100vw'\n  },\n  button: {\n    marginBottom: '15px',\n    width: '240px'\n  }\n});\n\nconst StudentCard = props => {\n  const { students, onUpdatedDataBase } = props;\n\n  const classes = useStyles();\n\n  // Edit State\n  const [isInEditMode, setIsInEditMode] = useState(false);\n  const toggleIsInEditMode = () => setIsInEditMode(!isInEditMode);\n\n  // Local Teacher Info State\n  const [student, setStudent] = useState({\n    first_name: students.first_name,\n    last_name: students.last_name,\n    guardian_first_name: students.guardian_first_name,\n    guardian_last_name: students.guardian_last_name,\n    student_DOB: students.student_DOB,\n    phone: students.phone,\n    email: students.email,\n    address: students.address,\n    city: students.city,\n    state: students.state,\n    zip: students.zip,\n    alt_first_name: students.alt_first_name,\n    alt_last_name: students.alt_last_name,\n    alt_phone: students.alt_phone,\n    photo_permission: students.photo_permission,\n    id: students.id\n  });\n\n  const cancelHandler = e => {\n    setStudent({\n      ...student,\n      first_name: students.first_name,\n      last_name: students.last_name,\n      guardian_first_name: students.guardian_first_name,\n      guardian_last_name: students.guardian_last_name,\n      student_DOB: students.student_DOB,\n      phone: students.phone,\n      email: students.email,\n      address: students.address,\n      city: students.city,\n      state: students.state,\n      zip: students.zip,\n      alt_first_name: students.alt_first_name,\n      alt_last_name: students.alt_last_name,\n      alt_phone: students.alt_phone,\n      photo_permission: students.photo_permission,\n      id: students.id\n    });\n    toggleIsInEditMode();\n  };\n\n  const saveHandler = e => {\n    const data = {\n      first_name: student.first_name,\n      last_name: student.last_name,\n      guardian_first_name: student.guardian_first_name,\n      guardian_last_name: student.guardian_last_name,\n      student_DOB: student.student_DOB,\n      phone: student.phone,\n      email: student.email,\n      address: student.address,\n      city: student.city,\n      state: student.state,\n      zip: student.zip,\n      alt_first_name: student.alt_first_name,\n      alt_last_name: student.alt_last_name,\n      alt_phone: student.alt_phone,\n      photo_permission: student.photo_permission,\n      id: student.id\n    };\n    const dataJSON = JSON.stringify(data);\n    // console.log('UPDATE SAVE: ', data);\n    axios({\n      method: 'put',\n      url: 'http://localhost:80/students',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: dataJSON\n    })\n      .then(function(response) {\n        console.log(response);\n        toggleIsInEditMode();\n        onUpdatedDataBase();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  const deleteConfirmation = e => {\n    confirmAlert({\n      title: 'Confirm to Delete',\n      message: 'Are you sure?',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: e => deleteHandler(e)\n        },\n        {\n          label: 'No',\n          onClick: () => {}\n        }\n      ]\n    });\n  };\n\n  const deleteHandler = e => {\n    const { id } = student;\n    const data = {\n      id: id\n    };\n    const dataJSON = JSON.stringify(data);\n\n    axios({\n      method: 'delete',\n      url: 'http://localhost:80/students',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: dataJSON\n    })\n      .then(function(response) {\n        console.log(response);\n        onUpdatedDataBase();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  // Able to map Inputs dynamically?\n  // {Object.entries(student).map(([key, value]) => (\n  //   <div key={student.id}></div>\n  // ))}\n\n  return (\n    <>\n      <CssBaseline>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Box\n              className={classes.cardTitle}\n              bgcolor=\"rgba(186, 130, 159, .2)\"\n              borderRadius=\"8px\"\n              padding={3}\n              display=\"flex\"\n              justifyContent=\"center\"\n              flexGrow={1}\n            >\n              <Typography variant=\"h4\">\n                {students.first_name} {students.last_name}\n              </Typography>\n            </Box>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails display=\"flex\">\n            <form className={classes.form} noValidate autoComplete=\"off\">\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>First Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"First Name\"\n                      variant=\"outlined\"\n                      autoFocus={true}\n                      value={student.first_name}\n                      onChange={e =>\n                        setStudent({ ...student, first_name: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>First Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{students.first_name}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Last Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Last Name\"\n                      variant=\"outlined\"\n                      value={student.last_name}\n                      onChange={e =>\n                        setStudent({ ...student, last_name: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Last Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box>\n                    <Typography variant=\"h6\">{students.last_name}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Guardian First: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"First Name\"\n                      variant=\"outlined\"\n                      value={student.guardian_first_name || ''}\n                      onChange={e =>\n                        setStudent({\n                          ...student,\n                          guardian_first_name: e.target.value\n                        })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Guardian First: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">\n                      {students.guardian_first_name}\n                    </Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Guardian Last: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Last Name\"\n                      variant=\"outlined\"\n                      value={student.guardian_last_name || ''}\n                      onChange={e =>\n                        setStudent({\n                          ...student,\n                          guardian_last_name: e.target.value\n                        })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Guardian Last: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">\n                      {students.guardian_last_name}\n                    </Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Student DOB: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      variant=\"outlined\"\n                      type=\"date\"\n                      value={student.student_DOB || ''}\n                      onChange={e =>\n                        setStudent({\n                          ...student,\n                          student_DOB: e.target.value\n                        })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Student DOB: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{students.student_DOB}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Phone: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Phone\"\n                      variant=\"outlined\"\n                      value={student.phone}\n                      onChange={e =>\n                        setStudent({ ...student, phone: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Phone: </strong>\n                    </Typography>\n                  </Box>\n                  <Box>\n                    <Typography variant=\"h6\">{students.phone}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Email: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Email\"\n                      variant=\"outlined\"\n                      value={student.email}\n                      onChange={e =>\n                        setStudent({ ...student, email: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Email: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{students.email}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Address: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Address\"\n                      variant=\"outlined\"\n                      value={student.address}\n                      onChange={e =>\n                        setStudent({ ...student, address: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Address: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{students.address}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>City: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"City\"\n                      variant=\"outlined\"\n                      value={student.city}\n                      onChange={e =>\n                        setStudent({ ...student, city: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>City: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{students.city}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>State: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"State\"\n                      variant=\"outlined\"\n                      value={student.state}\n                      onChange={e =>\n                        setStudent({ ...student, state: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>State: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{students.state}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Zip: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Zip\"\n                      variant=\"outlined\"\n                      value={student.zip}\n                      onChange={e =>\n                        setStudent({ ...student, zip: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Zip: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{students.zip}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Alt First: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Alt First\"\n                      variant=\"outlined\"\n                      value={student.alt_first_name}\n                      onChange={e =>\n                        setStudent({\n                          ...student,\n                          alt_first_name: e.target.value\n                        })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Alt First: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">\n                      {students.alt_first_name}\n                    </Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Alt Last: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Alt Last\"\n                      variant=\"outlined\"\n                      value={student.alt_last_name}\n                      onChange={e =>\n                        setStudent({\n                          ...student,\n                          alt_last_name: e.target.value\n                        })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Alt Last: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">\n                      {students.alt_last_name}\n                    </Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Alt Phone: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Alt Phone\"\n                      variant=\"outlined\"\n                      value={student.alt_phone}\n                      onChange={e =>\n                        setStudent({\n                          ...student,\n                          alt_phone: e.target.value\n                        })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Alt Phone: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{students.alt_phone}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Photo Perm: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Photo Perm\"\n                      variant=\"outlined\"\n                      value={student.photo_permission}\n                      onChange={e =>\n                        setStudent({\n                          ...student,\n                          photo_permission: e.target.value\n                        })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Photo Perm: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">\n                      {students.photo_permission}\n                    </Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box padding={2} display=\"flex\" flexDirection=\"column\">\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<CancelOutlinedIcon />}\n                    onClick={e => cancelHandler(e)}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<SaveAltIcon />}\n                    onClick={saveHandler}\n                  >\n                    Save\n                  </Button>\n                </Box>\n              ) : (\n                <Box padding={2} display=\"flex\" flexDirection=\"column\">\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<EditIcon />}\n                    onClick={toggleIsInEditMode}\n                  >\n                    Edit\n                  </Button>\n                  <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<DeleteIcon />}\n                    className={classes.button}\n                    onClick={deleteConfirmation}\n                  >\n                    Delete {students.first_name} {students.last_name}\n                  </Button>\n                </Box>\n              )}\n            </form>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </CssBaseline>\n    </>\n  );\n};\n\nexport default StudentCard;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  box: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    margin: '15px'\n  }\n});\n\nexport default function SortButtons(props) {\n  const classes = useStyles();\n  const {\n    onSortNameAsc,\n    onSortNameDesc,\n    onSortCreatedAsc,\n    onSortCreatedDesc,\n    onUpdatedDataBase,\n    students\n  } = props;\n\n  const emails = students.map(student => {\n    return `${student.email}`;\n  });\n\n  return (\n    <div>\n      <ButtonGroup className={classes.box} color=\"primary\">\n        <Button onClick={onSortNameAsc}>Last Name ↑</Button>\n        <Button onClick={onSortNameDesc}>Last Name ↓</Button>\n        <Button onClick={onSortCreatedAsc}>Created ↑</Button>\n        <Button onClick={onSortCreatedDesc}>Created ↓</Button>\n        <Button onClick={onUpdatedDataBase}>Reload</Button>\n        <Button variant=\"outlined\">\n          <a\n            style={{ textDecoration: 'none', color: '#DC6866' }}\n            href={`mailto:?bcc=${emails}`}\n          >\n            Email ALL\n          </a>\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n}\n","import React from 'react';\nimport StudentCard from './StudentCard';\nimport ButtonGroup from '../SingleComponents/ButtonGroupStudents';\nimport SearchField from '../SingleComponents/SearchField';\n\n// Material UI\nimport { Grid, CssBaseline, Box, Paper, Typography } from '@material-ui/core';\nconst EditStudents = props => {\n  const {\n    students,\n    onUpdatedDataBase,\n    onSortNameAsc,\n    onSortNameDesc,\n    onSortCreatedAsc,\n    onSortCreatedDesc,\n    searchFieldText,\n    onSearchSubmit,\n    query\n  } = props;\n\n  return (\n    <div>\n      <CssBaseline>\n        <Grid container display=\"flex\" direction=\"column\" alignItems=\"center\">\n          <Grid item>\n            <SearchField\n              searchFieldText={searchFieldText}\n              students={students}\n              query={query}\n              onSearchSubmit={onSearchSubmit}\n            />\n          </Grid>\n\n          <ButtonGroup\n            onSortNameAsc={onSortNameAsc}\n            onSortNameDesc={onSortNameDesc}\n            onSortCreatedAsc={onSortCreatedAsc}\n            onSortCreatedDesc={onSortCreatedDesc}\n            onUpdatedDataBase={onUpdatedDataBase}\n            students={students}\n          />\n          <Grid item align=\"center\" xs={12} sm={10} md={8} lg={8} xl={8}>\n            {students.length > 0 ? (\n              <>\n                {students.map(student => (\n                  <StudentCard\n                    key={student.id}\n                    students={student}\n                    onUpdatedDataBase={onUpdatedDataBase}\n                  />\n                ))}\n              </>\n            ) : (\n              <Box marginTop=\"30px\">\n                <Paper elevation={4}>\n                  <Typography variant=\"h5\">\n                    No results. Try your Search Again\n                  </Typography>\n                </Paper>\n              </Box>\n            )}\n          </Grid>\n        </Grid>\n      </CssBaseline>\n    </div>\n  );\n};\n\nexport default EditStudents;\n","import React from 'react';\nimport EditStudents from './EditStudents';\nimport axios from 'axios';\nimport moment from 'moment';\n\nclass StudentsData extends React.Component {\n  state = {\n    students: [],\n    query: ''\n  };\n\n  componentDidMount() {\n    this.fetchStudents();\n  }\n\n  onUpdatedDataBase = () => {\n    this.fetchStudents();\n  };\n\n  async fetchStudents() {\n    try {\n      const url = 'http://localhost:80/students';\n      const response = await fetch(url);\n      const data = await response.json();\n      // console.log(data);\n      const studentsData = data.students.map(student => ({\n        id: student.id,\n        first_name: student.first_name,\n        last_name: student.last_name,\n        guardian_first_name: student.guardian_first_name,\n        guardian_last_name: student.guardian_last_name,\n        student_DOB: moment(student.student_DOB).format('MM-DD-YYYY'),\n        phone: student.phone,\n        email: student.email,\n        address: student.address,\n        city: student.city,\n        state: student.state,\n        zip: student.zip,\n        alt_first_name: student.alt_first_name,\n        alt_last_name: student.alt_last_name,\n        alt_phone: student.alt_phone,\n        photo_permission: student.photo_permission\n      }));\n      // console.log(studentsData);\n      this.setState({ students: studentsData });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  onSortNameAsc = () => {\n    let newStudents = [...this.state.students];\n    newStudents.sort(function(a, b) {\n      let nameA = a.last_name.toLowerCase();\n      let nameB = b.last_name.toLowerCase();\n      if (nameA > nameB) {\n        return 1;\n      }\n      if (nameA < nameB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ students: newStudents });\n  };\n\n  onSortNameDesc = () => {\n    let newStudents = [...this.state.students];\n    newStudents.sort(function(a, b) {\n      let nameA = a.last_name.toLowerCase();\n      let nameB = b.last_name.toLowerCase();\n      if (nameA < nameB) {\n        return 1;\n      }\n      if (nameA > nameB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ students: newStudents });\n  };\n\n  onSortCreatedAsc = () => {\n    let newStudents = [...this.state.students];\n    newStudents.sort(function(a, b) {\n      let numA = a.id;\n      let numB = b.id;\n      if (numA > numB) {\n        return 1;\n      }\n      if (numA < numB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ students: newStudents });\n  };\n\n  onSortCreatedDesc = () => {\n    let newStudents = [...this.state.students];\n    newStudents.sort(function(a, b) {\n      let numA = a.id;\n      let numB = b.id;\n      if (numA < numB) {\n        return 1;\n      }\n      if (numA > numB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ students: newStudents });\n  };\n\n  searchFieldText = e => {\n    this.setState({ query: e.target.value });\n  };\n\n  onSearchSubmit = e => {\n    this.setState({ students: [] });\n    const search_query = this.state.query;\n    axios\n      .get(`http://localhost:80/studentsQuery?q=${search_query}`)\n      .then(res => {\n        // console.log(res);\n        const studentsData = res.data.students.map(student => ({\n          id: student.id,\n          first_name: student.first_name,\n          last_name: student.last_name,\n          guardian_first_name: student.guardian_first_name,\n          guardian_last_name: student.guardian_last_name,\n          student_DOB: moment(student.student_DOB).format('MM-DD-YYYY'),\n          phone: student.phone,\n          email: student.email,\n          address: student.address,\n          city: student.city,\n          state: student.state,\n          zip: student.zip,\n          alt_first_name: student.alt_first_name,\n          alt_last_name: student.alt_last_name,\n          alt_phone: student.alt_phone,\n          photo_permission: student.photo_permission\n        }));\n        // console.log('board fetch: ', boardData);\n        this.setState({ students: studentsData });\n        this.setState({ query: '' });\n      });\n  };\n\n  render() {\n    const { students, query } = this.state;\n    return (\n      <div>\n        <EditStudents\n          students={students}\n          onUpdatedDataBase={this.onUpdatedDataBase}\n          onSortNameAsc={this.onSortNameAsc}\n          onSortNameDesc={this.onSortNameDesc}\n          onSortCreatedAsc={this.onSortCreatedAsc}\n          onSortCreatedDesc={this.onSortCreatedDesc}\n          searchFieldText={this.searchFieldText}\n          onSearchSubmit={this.onSearchSubmit}\n          query={query}\n        />\n      </div>\n    );\n  }\n}\n\nexport default StudentsData;\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport {\n  Typography,\n  CssBaseline,\n  Button,\n  Box,\n  TextField\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nconst useStyles = makeStyles({\n  form: {\n    width: '100%'\n  },\n  button: {\n    marginBottom: '15px',\n    width: '240px'\n  }\n});\n\nconst TeacherCard = props => {\n  const { teachers, onUpdatedDataBase } = props;\n\n  const classes = useStyles();\n\n  // Edit State\n  const [isInEditMode, setIsInEditMode] = useState(false);\n  const toggleIsInEditMode = () => setIsInEditMode(!isInEditMode);\n\n  // Local Teacher Info State\n  const [teacher, setTeacher] = useState({\n    first_name: teachers.first_name,\n    last_name: teachers.last_name,\n    bio: teachers.bio,\n    id: teachers.id\n  });\n\n  const cancelHandler = e => {\n    setTeacher({\n      ...teacher,\n      first_name: teachers.first_name,\n      last_name: teachers.last_name,\n      bio: teachers.bio,\n      id: teachers.id\n    });\n    toggleIsInEditMode();\n  };\n\n  const saveHandler = e => {\n    const { first_name, last_name, bio, id } = teacher;\n    const data = {\n      first_name: first_name,\n      last_name: last_name,\n      bio: bio,\n      id: id\n    };\n    const dataJSON = JSON.stringify(data);\n    // console.log('UPDATE SAVE: ', data);\n    axios({\n      method: 'put',\n      url: 'http://localhost:80/teachers',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: dataJSON\n    })\n      .then(function(response) {\n        console.log(response);\n        toggleIsInEditMode();\n        onUpdatedDataBase();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  const deleteConfirmation = e => {\n    confirmAlert({\n      title: 'Confirm to Delete',\n      message: 'Are you sure?',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: e => deleteHandler(e)\n        },\n        {\n          label: 'No',\n          onClick: () => {}\n        }\n      ]\n    });\n  };\n\n  const deleteHandler = e => {\n    const { id } = teacher;\n    const data = {\n      id: id\n    };\n    const dataJSON = JSON.stringify(data);\n\n    axios({\n      method: 'delete',\n      url: 'http://localhost:80/teachers',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: dataJSON\n    })\n      .then(function(response) {\n        console.log(response);\n        onUpdatedDataBase();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      <CssBaseline>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Box\n              className={classes.cardTitle}\n              bgcolor=\"rgba(186, 130, 159, .2)\"\n              borderRadius=\"8px\"\n              padding={3}\n              display=\"flex\"\n              justifyContent=\"center\"\n              flexGrow={1}\n            >\n              <Typography variant=\"h4\">\n                {teachers.first_name} {teachers.last_name}\n              </Typography>\n            </Box>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails display=\"flex\">\n            <form className={classes.form} noValidate autoComplete=\"off\">\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>First Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"First Name\"\n                      variant=\"outlined\"\n                      autoFocus={true}\n                      value={teacher.first_name}\n                      onChange={e =>\n                        setTeacher({ ...teacher, first_name: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>First Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{teachers.first_name}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>First Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Last Name\"\n                      variant=\"outlined\"\n                      value={teacher.last_name}\n                      onChange={e =>\n                        setTeacher({ ...teacher, last_name: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Last Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box>\n                    <Typography variant=\"h6\">{teachers.last_name}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                  className={classes.bioBox}\n                  flexGrow={1}\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Bio: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      multiline={true}\n                      rows={3}\n                      fullWidth={true}\n                      className={classes.bioSection}\n                      label=\"Bio\"\n                      variant=\"outlined\"\n                      value={teacher.bio}\n                      onChange={e =>\n                        setTeacher({ ...teacher, bio: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  flexDirection=\"column\"\n                  alignItems=\"flex-start\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Bio: </strong>\n                    </Typography>\n                  </Box>\n                  <Box variant=\"h6\" flexGrow={1} textAlign=\"left\" padding={1}>\n                    <Typography>{teachers.bio}</Typography>\n                  </Box>\n                </Box>\n              )}\n              {isInEditMode ? (\n                <Box padding={2} display=\"flex\" flexDirection=\"column\">\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<CancelOutlinedIcon />}\n                    onClick={e => cancelHandler(e)}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<SaveAltIcon />}\n                    onClick={saveHandler}\n                  >\n                    Save\n                  </Button>\n                </Box>\n              ) : (\n                <Box padding={2} display=\"flex\" flexDirection=\"column\">\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<EditIcon />}\n                    onClick={toggleIsInEditMode}\n                  >\n                    Edit\n                  </Button>\n                  <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<DeleteIcon />}\n                    className={classes.button}\n                    onClick={deleteConfirmation}\n                  >\n                    Delete {teachers.first_name} {teachers.last_name}\n                  </Button>\n                </Box>\n              )}\n            </form>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </CssBaseline>\n    </>\n  );\n};\n\nexport default TeacherCard;\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\n// Material UI\nimport {\n  Typography,\n  CssBaseline,\n  Button,\n  Box,\n  TextField\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles({\n  form: {\n    width: '100%'\n  },\n  button: {\n    marginBottom: '15px',\n    width: '240px'\n  }\n});\n\nconst AddTeacher = props => {\n  const { onUpdatedDataBase } = props;\n  const classes = useStyles();\n\n  const [teacher, setTeacher] = useState({\n    first_name: '',\n    last_name: '',\n    bio: ''\n  });\n\n  const saveHandler = e => {\n    const { first_name, last_name, bio } = teacher;\n    const data = {\n      first_name: first_name,\n      last_name: last_name,\n      bio: bio\n    };\n    const dataJSON = JSON.stringify(data);\n    console.log(data);\n\n    axios({\n      method: 'post',\n      url: 'http://localhost:80/teachers',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: dataJSON\n    })\n      .then(function(response) {\n        console.log(response);\n        setTeacher({ first_name: '', last_name: '', bio: '' });\n        onUpdatedDataBase();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      <CssBaseline>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Box\n              className={classes.cardTitle}\n              bgcolor=\"rgba(186, 130, 159, .2)\"\n              borderRadius=\"8px\"\n              padding={3}\n              display=\"flex\"\n              justifyContent=\"center\"\n              flexGrow={1}\n            >\n              <Typography variant=\"h4\">Add A Teacher</Typography>\n            </Box>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <form className={classes.form} noValidate autoComplete=\"off\">\n              <Box\n                p={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                borderBottom=\"1px solid grey\"\n              >\n                <Box marginRight=\"10px\">\n                  <Typography variant=\"h6\">\n                    <strong>First Name: </strong>\n                  </Typography>\n                </Box>\n                <Box flexGrow={1} textAlign=\"left\">\n                  <TextField\n                    label=\"First Name\"\n                    variant=\"outlined\"\n                    autoFocus={true}\n                    value={teacher.first_name}\n                    onChange={e =>\n                      setTeacher({ ...teacher, first_name: e.target.value })\n                    }\n                    placeholder=\"First Name\"\n                  />\n                </Box>\n              </Box>\n              <Box\n                p={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                borderBottom=\"1px solid grey\"\n              >\n                <Box marginRight=\"10px\">\n                  <Typography variant=\"h6\">\n                    <strong>Last Name: </strong>\n                  </Typography>\n                </Box>\n                <Box flexGrow={1} textAlign=\"left\">\n                  <TextField\n                    label=\"Last Name\"\n                    variant=\"outlined\"\n                    autoFocus={true}\n                    value={teacher.last_name}\n                    onChange={e =>\n                      setTeacher({ ...teacher, last_name: e.target.value })\n                    }\n                    placeholder=\"Last Name\"\n                  />\n                </Box>\n              </Box>\n\n              <Box\n                p={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                borderBottom=\"1px solid grey\"\n                className={classes.bioBox}\n                flexGrow={1}\n              >\n                <Box marginRight=\"10px\">\n                  <Typography variant=\"h6\">\n                    <strong>Bio: </strong>\n                  </Typography>\n                </Box>\n                <Box flexGrow={1} textAlign=\"left\">\n                  <TextField\n                    multiline={true}\n                    rows={3}\n                    fullWidth\n                    className={classes.bioSection}\n                    label=\"Bio\"\n                    variant=\"outlined\"\n                    autoFocus={true}\n                    value={teacher.bio}\n                    onChange={e =>\n                      setTeacher({ ...teacher, bio: e.target.value })\n                    }\n                    placeholder=\"Bio\"\n                  />\n                </Box>\n              </Box>\n\n              <Box padding={2}>\n                <Button\n                  size=\"large\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  startIcon={<SaveAltIcon />}\n                  className={classes.button}\n                  onClick={saveHandler}\n                >\n                  Save New Teacher\n                </Button>\n              </Box>\n            </form>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </CssBaseline>\n    </>\n  );\n};\n\nexport default AddTeacher;\n","import React from 'react';\nimport TeacherCard from './TeacherCard';\nimport AddTeacher from './AddTeacher';\nimport ButtonGroup from '../SingleComponents/ButtonGroup';\nimport SearchField from '../SingleComponents/SearchField';\n\n// Material UI\nimport { Grid, CssBaseline, Box, Paper, Typography } from '@material-ui/core';\n\nconst EditTeachers = props => {\n  const {\n    teachers,\n    onUpdatedDataBase,\n    onSortNameAsc,\n    onSortNameDesc,\n    onSortCreatedAsc,\n    onSortCreatedDesc,\n    searchFieldText,\n    onSearchSubmit,\n    query\n  } = props;\n\n  return (\n    <div>\n      <CssBaseline>\n        <Grid container display=\"flex\" direction=\"column\" alignItems=\"center\">\n          <Grid item>\n            <SearchField\n              searchFieldText={searchFieldText}\n              teachers={teachers}\n              query={query}\n              onSearchSubmit={onSearchSubmit}\n            />\n          </Grid>\n\n          <ButtonGroup\n            onSortNameAsc={onSortNameAsc}\n            onSortNameDesc={onSortNameDesc}\n            onSortCreatedAsc={onSortCreatedAsc}\n            onSortCreatedDesc={onSortCreatedDesc}\n            onUpdatedDataBase={onUpdatedDataBase}\n          />\n          <Grid item align=\"center\" xs={12} sm={10} md={8} lg={8} xl={8}>\n            <AddTeacher onUpdatedDataBase={onUpdatedDataBase} />\n\n            {teachers.length > 0 ? (\n              <>\n                {teachers.map(teacher => (\n                  <TeacherCard\n                    key={teacher.id}\n                    teachers={teacher}\n                    onUpdatedDataBase={onUpdatedDataBase}\n                  />\n                ))}\n              </>\n            ) : (\n              <Box marginTop=\"30px\">\n                <Paper elevation={4}>\n                  <Typography variant=\"h5\">\n                    No results. Try your Search Again\n                  </Typography>\n                </Paper>\n              </Box>\n            )}\n          </Grid>\n        </Grid>\n      </CssBaseline>\n    </div>\n  );\n};\n\nexport default EditTeachers;\n","import React from 'react';\nimport EditTeachers from './EditTeachers';\nimport axios from 'axios';\n\nclass TeachersData extends React.Component {\n  state = {\n    teachers: [],\n    query: ''\n  };\n\n  componentDidMount() {\n    this.fetchTeachers();\n  }\n\n  onUpdatedDataBase = () => {\n    this.fetchTeachers();\n  };\n\n  async fetchTeachers() {\n    try {\n      const url = 'http://localhost:80/teachersCMS';\n      const response = await fetch(url);\n      const data = await response.json();\n      // console.log(data);\n      const teacherData = data.teachers.map(teacher => ({\n        id: teacher.id,\n        first_name: teacher.first_name,\n        last_name: teacher.last_name,\n        bio: teacher.bio\n      }));\n      // console.log(teacherData);\n      this.setState({ teachers: teacherData });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  onSortNameAsc = () => {\n    let newTeachers = [...this.state.teachers];\n    newTeachers.sort(function(a, b) {\n      let nameA = a.last_name.toLowerCase();\n      let nameB = b.last_name.toLowerCase();\n      if (nameA > nameB) {\n        return 1;\n      }\n      if (nameA < nameB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ teachers: newTeachers });\n  };\n\n  onSortNameDesc = () => {\n    let newTeachers = [...this.state.teachers];\n    newTeachers.sort(function(a, b) {\n      let nameA = a.last_name.toLowerCase();\n      let nameB = b.last_name.toLowerCase();\n      if (nameA < nameB) {\n        return 1;\n      }\n      if (nameA > nameB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ teachers: newTeachers });\n  };\n\n  onSortCreatedAsc = () => {\n    let newTeachers = [...this.state.teachers];\n    newTeachers.sort(function(a, b) {\n      let numA = a.id;\n      let numB = b.id;\n      if (numA > numB) {\n        return 1;\n      }\n      if (numA < numB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ teachers: newTeachers });\n  };\n\n  onSortCreatedDesc = () => {\n    let newTeachers = [...this.state.teachers];\n    newTeachers.sort(function(a, b) {\n      let numA = a.id;\n      let numB = b.id;\n      if (numA < numB) {\n        return 1;\n      }\n      if (numA > numB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ teachers: newTeachers });\n  };\n\n  searchFieldText = e => {\n    this.setState({ query: e.target.value });\n  };\n\n  onSearchSubmit = e => {\n    this.setState({ teachers: [] });\n    const search_query = this.state.query;\n    axios\n      .get(`http://localhost:80/teachersQuery?q=${search_query}`)\n      .then(res => {\n        console.log(res);\n        const teachersData = res.data.teachers.map(teacher => ({\n          id: teacher.id,\n          first_name: teacher.first_name,\n          last_name: teacher.last_name,\n          bio: teacher.bio\n        }));\n        // console.log('board fetch: ', boardData);\n        this.setState({ teachers: teachersData });\n        this.setState({ query: '' });\n      });\n  };\n\n  render() {\n    const { teachers, query } = this.state;\n    // console.log('in render: ', teachers);\n    return (\n      <div>\n        <EditTeachers\n          teachers={teachers}\n          onUpdatedDataBase={this.onUpdatedDataBase}\n          onSortNameAsc={this.onSortNameAsc}\n          onSortNameDesc={this.onSortNameDesc}\n          onSortCreatedAsc={this.onSortCreatedAsc}\n          onSortCreatedDesc={this.onSortCreatedDesc}\n          searchFieldText={this.searchFieldText}\n          onSearchSubmit={this.onSearchSubmit}\n          query={query}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TeachersData;\n","import React from 'react';\n\n// Material UI\nimport 'typeface-roboto';\n\nimport { Grid, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    height: 120,\n    width: 240\n  },\n  top: {\n    borderBottom: '1px solid #DC6866',\n    backgroundColor: '#679488',\n    color: 'white'\n  },\n  bottom: {\n    marginTop: '20px'\n  }\n}));\n\nfunction Panel() {\n  const classes = useStyles();\n  return (\n    <div>\n      <Grid\n        container\n        display=\"flex\"\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ minHeight: '85vh' }}\n      >\n        <Grid\n          item\n          display=\"flex\"\n          align=\"center\"\n          xs={12}\n          sm={8}\n          md={8}\n          lg={4}\n          xl={4}\n        >\n          <Paper variant=\"outlined\" className={classes.paper}>\n            <Typography className={classes.top} variant=\"h5\">\n              Admin Panel\n            </Typography>\n            <Typography align=\"center\" className={classes.bottom} variant=\"h6\">\n              Navigate with Menu\n            </Typography>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Panel;\n","import React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\n\n// Components\nimport Navigation from './Components/Navigation/Navigation';\nimport Login from './Components/Auth/Login';\nimport Board from './Components/Board/BoardData';\nimport Sections from './Components/Sections/SectionsData';\nimport Students from './Components/Students/StudentsData';\nimport Teachers from './Components/Teachers/TeachersData';\nimport Panel from './Components/Panel';\n\n// Material UI\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport 'typeface-roboto';\n\nclass App extends React.Component {\n  state = {\n    isLoggedIn: true\n  };\n\n  theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#679488'\n      },\n      secondary: {\n        main: '#AD7994'\n      }\n    }\n  });\n\n  logInHandler = e => {\n    e.preventDefault();\n    this.setState({ isLoggedIn: true });\n  };\n\n  logOutHandler = () => {\n    this.setState({ isLoggedIn: false });\n  };\n\n  ProtectedRoute = ({ component: Component, ...rest }) => {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          this.state.isLoggedIn ? (\n            <Component {...props} />\n          ) : (\n            <Redirect to=\"/admin\" />\n          )\n        }\n      />\n    );\n  };\n\n  render() {\n    const { isLoggedIn } = this.state;\n    return (\n      <BrowserRouter>\n        <ThemeProvider theme={this.theme}>\n          <Navigation\n            isLoggedIn={isLoggedIn}\n            logOutHandler={this.logOutHandler}\n          />\n          <Switch>\n            <Route\n              path=\"/admin\"\n              render={props => (\n                <Login\n                  {...props}\n                  logInHandler={e => this.logInHandler(e)}\n                  isLoggedIn={isLoggedIn}\n                />\n              )}\n            />\n            <this.ProtectedRoute exact path=\"/panel\" component={Panel} />\n            <this.ProtectedRoute path=\"/panel/board\" component={Board} />\n            <this.ProtectedRoute path=\"/panel/classes\" component={Sections} />\n            <this.ProtectedRoute path=\"/panel/students\" component={Students} />\n            <this.ProtectedRoute path=\"/panel/teachers\" component={Teachers} />\n            <Route path=\"/panel/*\" component={() => '404 Not Found'} />\n          </Switch>\n        </ThemeProvider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}