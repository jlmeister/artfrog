{"version":3,"sources":["auth/checkAuth.js","Components/Navigation/ButtonAppBarCollapse.js","Components/Navigation/AppBarCollapse.js","Components/Navigation/Navigation.js","Components/Auth/Login.js","Components/Board/BoardCard.js","Components/Board/AddMember.js","Components/SingleComponents/ButtonGroup.js","Components/SingleComponents/SearchField.js","Components/Board/EditBoard.js","Components/Board/BoardData.js","Components/Sections/AddSection.js","Components/Sections/SectionsCard.js","Components/SingleComponents/ButtonGroupSections.js","Components/Sections/EditSections.js","Components/Sections/SectionsData.js","Components/Students/StudentCard.js","Components/SingleComponents/ButtonGroupStudents.js","Components/Students/EditStudents.js","Components/Students/StudentsData.js","Components/Teachers/TeacherCard.js","Components/Teachers/AddTeacher.js","Components/Teachers/EditTeachers.js","Components/Teachers/TeachersData.js","Components/Panel.js","App.js","serviceWorker.js","index.js"],"names":["checkAuth","JSON","parse","window","sessionStorage","getItem","ButtonAppBarCollapse","props","handleMenu","event","setState","anchorEl","currentTarget","handleClose","state","bind","classes","this","open","Boolean","className","buttonCollapse","IconButton","onClick","fontSize","htmlColor","Menu","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","children","React","Component","withStyles","theme","breakpoints","up","display","useStyles","makeStyles","title","flexGrow","links","marginRight","textDecoration","color","linksCollapsed","root","position","right","buttonBar","down","logout","removeItem","location","replace","MenuItem","Typography","variant","to","Button","createMuiTheme","palette","primary","main","secondary","Navigation","ThemeProvider","AppBar","Toolbar","mainBody","height","justifyContent","alignItems","avatar","backgroundColor","inputField","width","subButton","background","transition","Login","history","useState","username","setUsername","password","setPassword","CssBaseline","onSubmit","e","preventDefault","fetch","method","headers","Authorization","btoa","then","res","status","setItem","assign","catch","err","console","log","Grid","container","spacing","direction","justify","item","xs","Avatar","component","TextField","label","name","value","onChange","target","type","form","button","marginBottom","BoardCard","board","onUpdatedDataBase","isInEditMode","setIsInEditMode","toggleIsInEditMode","first_name","last_name","bio","member","setMember","deleteHandler","data","dataJSON","stringify","axios","url","response","error","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","Box","cardTitle","bgcolor","borderRadius","padding","ExpansionPanelDetails","noValidate","autoComplete","p","borderBottom","textAlign","autoFocus","bioBox","multiline","rows","fullWidth","bioSection","flexDirection","startIcon","size","confirmAlert","message","buttons","AddMember","placeholder","box","flexWrap","margin","SortButtons","onSortNameAsc","onSortNameDesc","onSortCreatedAsc","onSortCreatedDesc","ButtonGroup","marginTop","marginLeft","SearchField","searchFieldText","query","onSearchSubmit","setError","align","helperText","InputProps","startAdornment","InputAdornment","length","EditBoard","sm","md","lg","xl","map","key","Paper","elevation","BoardData","fetchBoard","newBoard","sort","a","b","nameA","toLowerCase","nameB","numA","numB","search_query","get","boardData","json","AddSection","class_id","class_name","description","date","start_time","end_time","section","setSection","moment","format","SectionsCard","sections","section_name","flexBasis","EditSections","SectionsData","fetchSections","newSections","sectionsData","StudentCard","students","guardian_first_name","guardian_last_name","student_DOB","phone","email","address","city","zip","alt_first_name","alt_last_name","alt_phone","photo_permission","student","setStudent","emails","style","href","EditStudents","StudentsData","fetchStudents","newStudents","studentsData","TeacherCard","teachers","teacher","setTeacher","AddTeacher","EditTeachers","TeachersData","fetchTeachers","newTeachers","teachersData","teacherData","paper","top","bottom","Panel","minHeight","App","ProtectedRoute","rest","render","path","exact","Board","Sections","Students","Teachers","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19ccafd6.chunk.js","sourcesContent":["const checkAuth = () => JSON.parse(window.sessionStorage.getItem('adminHasBeenAuthenticated')) === true\n\nexport default checkAuth;","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { Menu } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport PaletteOutlinedIcon from '@material-ui/icons/PaletteOutlined';\n\nconst styles = theme => ({\n  buttonCollapse: {\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n    margin: '10px',\n    boxShadow: 'none',\n  },\n});\n\nclass ButtonAppBarCollapse extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null,\n    };\n    this.handleMenu = this.handleMenu.bind(this);\n  }\n\n  handleMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n      <div className={classes.buttonCollapse}>\n        <IconButton onClick={this.handleMenu}>\n          <PaletteOutlinedIcon fontSize=\"large\" htmlColor=\"white\" />\n        </IconButton>\n        <Menu\n          id=\"menu-appbar\"\n          anchorEl={anchorEl}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          open={open}\n          onClose={this.handleClose}\n        >\n          {this.props.children}\n        </Menu>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(ButtonAppBarCollapse);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// Material UI stuff\nimport { Button, MenuItem } from '@material-ui/core';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ButtonAppBarCollapse from './ButtonAppBarCollapse';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n  },\n  links: {\n    marginRight: '20px',\n    textDecoration: 'none',\n    color: 'white',\n  },\n  linksCollapsed: {\n    color: 'black',\n    marginRight: 'none',\n    textDecoration: 'none',\n  },\n}));\n\nconst styles = theme => ({\n  root: {\n    position: 'absolute',\n    right: 0,\n  },\n  buttonBar: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none',\n    },\n    display: 'flex',\n    marginRight: '20px',\n  },\n});\n\nconst AppBarCollapse = props => {\n  const classes = useStyles();\n  const logout = () => {\n    window.sessionStorage.removeItem('adminHasBeenAuthenticated')\n    window.location.replace('/admin')\n  }\n\n  return (\n    <div className={props.classes.root}>\n      <ButtonAppBarCollapse>\n        <MenuItem>\n          <Typography variant=\"h6\">\n            <Link to=\"/admin/classes\" className={classes.linksCollapsed}>\n              Classes\n            </Link>\n          </Typography>\n        </MenuItem>\n\n        <MenuItem>\n          <Typography variant=\"h6\">\n            <Link to=\"/admin/students\" className={classes.linksCollapsed}>\n              Students\n            </Link>\n          </Typography>\n        </MenuItem>\n\n        <MenuItem>\n          <Typography variant=\"h6\">\n            <Link to=\"/admin/teachers\" className={classes.linksCollapsed}>\n              Teachers\n            </Link>\n          </Typography>\n        </MenuItem>\n\n        <MenuItem>\n          <Typography variant=\"h6\">\n            <Link to=\"/admin/board\" className={classes.linksCollapsed}>\n              Board\n            </Link>\n          </Typography>\n        </MenuItem>\n\n        <MenuItem>\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={logout}\n          >\n            LOG OUT\n          </Button>\n        </MenuItem>\n      </ButtonAppBarCollapse>\n      <div className={props.classes.buttonBar} id=\"appbar-collapse\">\n        <Typography variant=\"h6\">\n          <Link to=\"/admin/classes\" className={classes.links}>\n            Classes\n          </Link>\n        </Typography>\n        <Typography variant=\"h6\">\n          <Link to=\"/admin/students\" className={classes.links}>\n            Students\n          </Link>\n        </Typography>\n        <Typography variant=\"h6\">\n          <Link to=\"/admin/teachers\" className={classes.links}>\n            Teachers\n          </Link>\n        </Typography>\n        <Typography variant=\"h6\">\n          <Link to=\"/admin/board\" className={classes.links}>\n            Board\n          </Link>\n        </Typography>\n        <Button\n          variant=\"outlined\"\n          color=\"inherit\"\n          onClick={logout}\n        >\n          LOG OUT\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(AppBarCollapse);\n","import React from 'react';\nimport checkAuth from '../../auth/checkAuth'\n\n// Material UI stuff\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport AppBarCollapse from './AppBarCollapse';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#679488',\n    },\n    secondary: {\n      main: '#DC6866',\n    },\n  },\n});\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n  },\n  links: {\n    marginRight: '20px',\n    textDecoration: 'none',\n    color: 'white',\n  },\n}));\n\nfunction Navigation(props) {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <Typography variant=\"h5\" className={classes.title}>\n            ArtFrog Academy\n          </Typography>\n          {checkAuth() && (\n            <>\n              <AppBarCollapse />\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n    </ThemeProvider>\n  );\n}\n\nexport default Navigation;\n","import React, { useState } from 'react';\nimport checkAuth from '../../auth/checkAuth'\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  makeStyles,\n  ThemeProvider,\n  createMuiTheme,\n} from '@material-ui/core/styles';\n\nimport { Redirect } from 'react-router-dom';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#679488',\n    },\n    secondary: {\n      main: '#AD7994',\n    },\n  },\n});\n\nconst useStyles = makeStyles({\n  mainBody: {\n    height: '75vh',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  avatar: {\n    backgroundColor: '#DC6866',\n  },\n\n  inputField: {\n    width: '300px',\n  },\n\n  subButton: {\n    backgroundColor: '#DC6866',\n    width: '300px',\n    '&:hover': {\n      background: '#679488',\n      transition: '.4s',\n    },\n  },\n});\n\nconst Login = ({ history }) => {\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch('http://localhost/api/auth', {\n      method: 'POST',\n      headers: {\n        Authorization: window.btoa(username + \":\" + password)\n      }\n    })\n    .then(res => {\n      if (res.status === 200)\n        window.sessionStorage.setItem('adminHasBeenAuthenticated', true)\n    })\n    .then(res => window.location.assign('/admin'))\n    .catch((err) => console.log(err))\n  }\n\n  return (\n    <>\n      <CssBaseline />\n      {checkAuth() ? (\n        <Redirect to=\"/admin\" />\n      ) : (\n        <div className={classes.mainBody}>\n          <form className=\"formBox\" onSubmit={handleSubmit}>\n            <div>\n              <Grid\n                container\n                spacing={2}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n              >\n                <Grid item xs={12}>\n                  <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                  </Avatar>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography component=\"h1\" variant=\"h4\">\n                    Log In\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <ThemeProvider theme={theme}>\n                    <TextField\n                      variant=\"outlined\"\n                      label=\"User Name\"\n                        name=\"username\"\n                        value={username}\n                        onChange={e => setUsername(e.target.value)}\n                      className={classes.inputField}\n                    />\n                  </ThemeProvider>\n                </Grid>\n                <Grid item xs={12}>\n                  <ThemeProvider theme={theme}>\n                    <TextField\n                      variant=\"outlined\"\n                      label=\"Password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                      className={classes.inputField}\n                    />\n                  </ThemeProvider>\n                </Grid>\n                <Grid item xs={12}>\n                  <Button\n                    variant=\"contained\"\n                    type=\"submit\"\n                    color=\"primary\"\n                    className={classes.subButton}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </form>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport {\n  Typography,\n  CssBaseline,\n  Button,\n  Box,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nconst useStyles = makeStyles({\n  form: {\n    width: '100vw',\n  },\n  button: {\n    marginBottom: '15px',\n    width: '240px',\n  },\n});\n\nconst BoardCard = props => {\n  const { board, onUpdatedDataBase } = props;\n\n  const classes = useStyles();\n\n  // Edit State\n  const [isInEditMode, setIsInEditMode] = useState(false);\n  const toggleIsInEditMode = () => setIsInEditMode(!isInEditMode);\n\n  // Local Board Members Info State\n  const [member, setMember] = useState({\n    first_name: board.first_name,\n    last_name: board.last_name,\n    bio: board.bio,\n    id: board.id,\n  });\n\n  const cancelHandler = e => {\n    setMember({\n      ...member,\n      first_name: board.first_name,\n      last_name: board.last_name,\n      bio: board.bio,\n      id: board.id,\n    });\n    toggleIsInEditMode();\n  };\n\n  const saveHandler = e => {\n    const { first_name, last_name, bio, id } = member;\n    const data = {\n      first_name,\n      last_name,\n      bio,\n      id,\n    };\n    const dataJSON = JSON.stringify(data);\n    // console.log('UPDATE SAVE: ', data);\n    axios({\n      method: 'put',\n      url: 'http://localhost:80/about',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: dataJSON,\n    })\n      .then(function(response) {\n        console.log(response);\n        toggleIsInEditMode();\n        onUpdatedDataBase();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  const deleteConfirmation = e => {\n    confirmAlert({\n      title: 'Confirm to Delete',\n      message: 'Are you sure?',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: e => deleteHandler(e),\n        },\n        {\n          label: 'No',\n          onClick: () => {},\n        },\n      ],\n    });\n  };\n\n  const deleteHandler = e => {\n    const { id } = board;\n    const data = {\n      id,\n    };\n    const dataJSON = JSON.stringify(data);\n\n    axios({\n      method: 'delete',\n      url: 'http://localhost:80/about',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: dataJSON,\n    })\n      .then(function(response) {\n        console.log(response);\n        onUpdatedDataBase();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      <CssBaseline>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Box\n              className={classes.cardTitle}\n              bgcolor=\"rgba(186, 130, 159, .2)\"\n              borderRadius=\"8px\"\n              padding={3}\n              display=\"flex\"\n              justifyContent=\"center\"\n              flexGrow={1}\n            >\n              <Typography variant=\"h4\">\n                {board.first_name} {board.last_name}\n              </Typography>\n            </Box>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails display=\"flex\">\n            <form className={classes.form} noValidate autoComplete=\"off\">\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>First Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"First Name\"\n                      variant=\"outlined\"\n                      autoFocus\n                      value={member.first_name}\n                      onChange={e =>\n                        setMember({ ...member, first_name: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>First Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{board.first_name}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>First Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Last Name\"\n                      variant=\"outlined\"\n                      value={member.last_name}\n                      onChange={e =>\n                        setMember({ ...member, last_name: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Last Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box>\n                    <Typography variant=\"h6\">{board.last_name}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                  className={classes.bioBox}\n                  flexGrow={1}\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Bio: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      multiline\n                      rows={3}\n                      fullWidth\n                      className={classes.bioSection}\n                      label=\"Bio\"\n                      variant=\"outlined\"\n                      value={member.bio}\n                      onChange={e =>\n                        setMember({ ...member, bio: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  flexDirection=\"column\"\n                  alignItems=\"flex-start\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Bio: </strong>\n                    </Typography>\n                  </Box>\n                  <Box variant=\"h6\" flexGrow={1} textAlign=\"left\" padding={1}>\n                    <Typography>{board.bio}</Typography>\n                  </Box>\n                </Box>\n              )}\n              {isInEditMode ? (\n                <Box padding={2} display=\"flex\" flexDirection=\"column\">\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<CancelOutlinedIcon />}\n                    onClick={e => cancelHandler(e)}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<SaveAltIcon />}\n                    onClick={saveHandler}\n                  >\n                    Save\n                  </Button>\n                </Box>\n              ) : (\n                <Box padding={2} display=\"flex\" flexDirection=\"column\">\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<EditIcon />}\n                    onClick={toggleIsInEditMode}\n                  >\n                    Edit\n                  </Button>\n                  <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<DeleteIcon />}\n                    className={classes.button}\n                    onClick={deleteConfirmation}\n                  >\n                    Delete {board.first_name} {board.last_name}\n                  </Button>\n                </Box>\n              )}\n            </form>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </CssBaseline>\n    </>\n  );\n};\n\nexport default BoardCard;\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\n// Material UI\nimport {\n  Typography,\n  CssBaseline,\n  Button,\n  Box,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles({\n  form: {\n    width: '100%',\n  },\n  button: {\n    marginBottom: '15px',\n    width: '240px',\n  },\n});\n\nconst AddMember = props => {\n  const { onUpdatedDataBase } = props;\n  const classes = useStyles();\n\n  const [member, setMember] = useState({\n    first_name: '',\n    last_name: '',\n    bio: '',\n  });\n\n  const saveHandler = e => {\n    const { first_name, last_name, bio } = member;\n    const data = {\n      first_name,\n      last_name,\n      bio,\n    };\n    const dataJSON = JSON.stringify(data);\n    console.log(data);\n\n    axios({\n      method: 'post',\n      url: 'http://localhost:80/about',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: dataJSON,\n    })\n      .then(function(response) {\n        console.log(response);\n        setMember({ first_name: '', last_name: '', bio: '' });\n        onUpdatedDataBase();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      <CssBaseline>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Box\n              className={classes.cardTitle}\n              bgcolor=\"rgba(186, 130, 159, .2)\"\n              borderRadius=\"8px\"\n              padding={3}\n              display=\"flex\"\n              justifyContent=\"center\"\n              flexGrow={1}\n            >\n              <Typography variant=\"h4\">Add A Board Member</Typography>\n            </Box>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <form className={classes.form} noValidate autoComplete=\"off\">\n              <Box\n                p={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                borderBottom=\"1px solid grey\"\n              >\n                <Box marginRight=\"10px\">\n                  <Typography variant=\"h6\">\n                    <strong>First Name: </strong>\n                  </Typography>\n                </Box>\n                <Box flexGrow={1} textAlign=\"left\">\n                  <TextField\n                    label=\"First Name\"\n                    variant=\"outlined\"\n                    autoFocus\n                    value={member.first_name}\n                    onChange={e =>\n                      setMember({ ...member, first_name: e.target.value })\n                    }\n                    placeholder=\"First Name\"\n                  />\n                </Box>\n              </Box>\n              <Box\n                p={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                borderBottom=\"1px solid grey\"\n              >\n                <Box marginRight=\"10px\">\n                  <Typography variant=\"h6\">\n                    <strong>Last Name: </strong>\n                  </Typography>\n                </Box>\n                <Box flexGrow={1} textAlign=\"left\">\n                  <TextField\n                    label=\"Last Name\"\n                    variant=\"outlined\"\n                    autoFocus\n                    value={member.last_name}\n                    onChange={e =>\n                      setMember({ ...member, last_name: e.target.value })\n                    }\n                    placeholder=\"Last Name\"\n                  />\n                </Box>\n              </Box>\n\n              <Box\n                p={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                borderBottom=\"1px solid grey\"\n                className={classes.bioBox}\n                flexGrow={1}\n              >\n                <Box marginRight=\"10px\">\n                  <Typography variant=\"h6\">\n                    <strong>Bio: </strong>\n                  </Typography>\n                </Box>\n                <Box flexGrow={1} textAlign=\"left\">\n                  <TextField\n                    multiline\n                    rows={3}\n                    fullWidth\n                    className={classes.bioSection}\n                    label=\"Bio\"\n                    variant=\"outlined\"\n                    autoFocus\n                    value={member.bio}\n                    onChange={e =>\n                      setMember({ ...member, bio: e.target.value })\n                    }\n                    placeholder=\"Bio\"\n                  />\n                </Box>\n              </Box>\n\n              <Box padding={2}>\n                <Button\n                  size=\"large\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  startIcon={<SaveAltIcon />}\n                  className={classes.button}\n                  onClick={saveHandler}\n                >\n                  Save New Member\n                </Button>\n              </Box>\n            </form>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </CssBaseline>\n    </>\n  );\n};\n\nexport default AddMember;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  box: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    margin: '15px',\n  },\n});\n\nexport default function SortButtons(props) {\n  const classes = useStyles();\n  const {\n    onSortNameAsc,\n    onSortNameDesc,\n    onSortCreatedAsc,\n    onSortCreatedDesc,\n    onUpdatedDataBase,\n  } = props;\n\n  return (\n    <div>\n      <ButtonGroup className={classes.box} color=\"primary\">\n        <Button onClick={onSortNameAsc}>Last Name ↑</Button>\n        <Button onClick={onSortNameDesc}>Last Name ↓</Button>\n        <Button onClick={onSortCreatedAsc}>Created ↑</Button>\n        <Button onClick={onSortCreatedDesc}>Created ↓</Button>\n        <Button onClick={onUpdatedDataBase}>Reload</Button>\n      </ButtonGroup>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { TextField, Box, Button } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(5),\n  },\n  subButton: {\n    marginLeft: 5,\n    height: 55,\n  },\n}));\n\nexport default function SearchField(props) {\n  const classes = useStyles();\n  const { searchFieldText, query, onSearchSubmit } = props;\n\n  const [error, setError] = useState(false);\n\n  const clickHandler = () => {\n    if (query.length < 3) {\n      setError(true);\n    } else {\n      setError(false);\n      onSearchSubmit();\n    }\n  };\n\n  return (\n    <div>\n      <Box className={classes.root} display=\"flex\" align=\"center\" width=\"75vw\">\n        {error ? (\n          <TextField\n            fullWidth\n            error\n            value={query}\n            helperText=\"Enter at least 3 letters.\"\n            variant=\"outlined\"\n            onChange={e => searchFieldText(e)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n        ) : (\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            placeholder=\"Search By Name\"\n            value={query}\n            onChange={e => searchFieldText(e)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n        )}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          className={classes.subButton}\n          onClick={clickHandler}\n        >\n          Submit\n        </Button>\n      </Box>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Grid, CssBaseline, Box, Paper, Typography } from '@material-ui/core';\nimport BoardCard from './BoardCard';\nimport AddMember from './AddMember';\nimport ButtonGroup from '../SingleComponents/ButtonGroup';\nimport SearchField from '../SingleComponents/SearchField';\n\n// Material UI\n\nconst EditBoard = props => {\n  const {\n    board,\n    onUpdatedDataBase,\n    onSortNameAsc,\n    onSortNameDesc,\n    onSortCreatedAsc,\n    onSortCreatedDesc,\n    searchFieldText,\n    query,\n    onSearchSubmit,\n  } = props;\n\n  return (\n    <div>\n      <CssBaseline>\n        <Grid container display=\"flex\" direction=\"column\" alignItems=\"center\">\n          <SearchField\n            searchFieldText={searchFieldText}\n            board={board}\n            query={query}\n            onSearchSubmit={onSearchSubmit}\n          />\n\n          <ButtonGroup\n            onSortNameAsc={onSortNameAsc}\n            onSortNameDesc={onSortNameDesc}\n            onSortCreatedAsc={onSortCreatedAsc}\n            onSortCreatedDesc={onSortCreatedDesc}\n            onUpdatedDataBase={onUpdatedDataBase}\n          />\n\n          <Grid item align=\"center\" xs={12} sm={10} md={8} lg={8} xl={8}>\n            <AddMember onUpdatedDataBase={onUpdatedDataBase} />\n            {board.length > 0 ? (\n              <>\n                {board.map(member => (\n                  <BoardCard\n                    key={member.id}\n                    board={member}\n                    onUpdatedDataBase={onUpdatedDataBase}\n                  />\n                ))}\n              </>\n            ) : (\n              <Box marginTop=\"30px\">\n                <Paper elevation={4}>\n                  <Typography variant=\"h5\">\n                    No results. Try your Search Again\n                  </Typography>\n                </Paper>\n              </Box>\n            )}\n          </Grid>\n        </Grid>\n      </CssBaseline>\n    </div>\n  );\n};\n\nexport default EditBoard;\n","import React from 'react';\nimport axios from 'axios';\nimport EditBoard from './EditBoard';\n\nclass BoardData extends React.Component {\n  state = {\n    board: [],\n    query: '',\n  };\n\n  componentDidMount() {\n    this.fetchBoard();\n  }\n\n  onUpdatedDataBase = () => {\n    this.fetchBoard();\n  };\n\n  async fetchBoard() {\n    try {\n      const url = 'http://localhost:80/aboutCMS';\n      const response = await fetch(url);\n      const data = await response.json();\n      // console.log(data);\n      const boardData = data.board.map(member => ({\n        id: member.id,\n        first_name: member.first_name,\n        last_name: member.last_name,\n        bio: member.bio,\n      }));\n      // console.log('board fetch: ', boardData);\n      this.setState({ board: boardData });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  onSortNameAsc = () => {\n    const newBoard = [...this.state.board];\n    newBoard.sort(function(a, b) {\n      const nameA = a.last_name.toLowerCase();\n      const nameB = b.last_name.toLowerCase();\n      if (nameA > nameB) {\n        return 1;\n      }\n      if (nameA < nameB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ board: newBoard });\n  };\n\n  onSortNameDesc = () => {\n    const newBoard = [...this.state.board];\n    newBoard.sort(function(a, b) {\n      const nameA = a.last_name.toLowerCase();\n      const nameB = b.last_name.toLowerCase();\n      if (nameA < nameB) {\n        return 1;\n      }\n      if (nameA > nameB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ board: newBoard });\n  };\n\n  onSortCreatedAsc = () => {\n    const newBoard = [...this.state.board];\n    newBoard.sort(function(a, b) {\n      const numA = a.id;\n      const numB = b.id;\n      if (numA > numB) {\n        return 1;\n      }\n      if (numA < numB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ board: newBoard });\n  };\n\n  onSortCreatedDesc = () => {\n    const newBoard = [...this.state.board];\n    newBoard.sort(function(a, b) {\n      const numA = a.id;\n      const numB = b.id;\n      if (numA < numB) {\n        return 1;\n      }\n      if (numA > numB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ board: newBoard });\n  };\n\n  searchFieldText = e => {\n    this.setState({ query: e.target.value });\n  };\n\n  onSearchSubmit = e => {\n    this.setState({ board: [] });\n    const search_query = this.state.query;\n    axios.get(`/aboutQuery?q=${search_query}`).then(res => {\n      // console.log(res);\n      const boardData = res.data.board.map(member => ({\n        id: member.id,\n        first_name: member.first_name,\n        last_name: member.last_name,\n        bio: member.bio,\n      }));\n      // console.log('board fetch: ', boardData);\n      this.setState({ board: boardData });\n      this.setState({ query: '' });\n    });\n  };\n\n  render() {\n    const { board, query } = this.state;\n    // console.log('in render: ', board);\n    return (\n      <div>\n        <EditBoard\n          board={board}\n          onUpdatedDataBase={this.onUpdatedDataBase}\n          onSortNameAsc={this.onSortNameAsc}\n          onSortNameDesc={this.onSortNameDesc}\n          onSortCreatedAsc={this.onSortCreatedAsc}\n          onSortCreatedDesc={this.onSortCreatedDesc}\n          searchFieldText={this.searchFieldText}\n          onSearchSubmit={this.onSearchSubmit}\n          query={query}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BoardData;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\n\n// Material UI\nimport {\n  Typography,\n  CssBaseline,\n  Button,\n  Box,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles({\n  form: {\n    width: '100%',\n  },\n  button: {\n    marginBottom: '15px',\n    width: '240px',\n  },\n});\n\nconst AddSection = props => {\n  const { onUpdatedDataBase } = props;\n  const classes = useStyles();\n\n  // Local Section Info State\n  const [section, setSection] = useState({\n    class_id: '',\n    class_name: '',\n    description: '',\n    date: '',\n    start_time: '',\n    end_time: '',\n  });\n\n  const saveHandler = e => {\n    const data = {\n      class_name: section.class_name,\n      description: section.description,\n      date: moment(section.date).format('YYYY-MM-DD'),\n      start_time: section.start_time,\n      end_time: section.end_time,\n    };\n    const dataJSON = JSON.stringify(data);\n    console.log('UPDATE SAVE: ', data);\n    axios({\n      method: 'post',\n      url: 'http://localhost:80/classes',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: dataJSON,\n    })\n      .then(function(response) {\n        console.log(response);\n        onUpdatedDataBase();\n        setSection({\n          class_id: '',\n          class_name: '',\n          description: '',\n          date: '',\n          start_time: '',\n          end_time: '',\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      <CssBaseline>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Box\n              className={classes.cardTitle}\n              bgcolor=\"rgba(186, 130, 159, .2)\"\n              borderRadius=\"8px\"\n              padding={3}\n              display=\"flex\"\n              justifyContent=\"center\"\n              flexGrow={1}\n            >\n              <Typography variant=\"h4\">Add A Class</Typography>\n            </Box>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails display=\"flex\">\n            <form className={classes.form} noValidate autoComplete=\"off\">\n              <Box\n                p={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                borderBottom=\"1px solid grey\"\n              >\n                <Box marginRight=\"10px\">\n                  <Typography variant=\"h6\">\n                    <strong>Class Name: </strong>\n                  </Typography>\n                </Box>\n                <Box flexGrow={1} textAlign=\"left\">\n                  <TextField\n                    label=\"Class Name\"\n                    variant=\"outlined\"\n                    autoFocus\n                    value={section.class_name}\n                    onChange={e =>\n                      setSection({ ...section, class_name: e.target.value })\n                    }\n                  />\n                </Box>\n              </Box>\n\n              <Box\n                p={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                borderBottom=\"1px solid grey\"\n              >\n                <Box marginRight=\"10px\">\n                  <Typography variant=\"h6\">\n                    <strong>Description: </strong>\n                  </Typography>\n                </Box>\n                <Box flexGrow={1} textAlign=\"left\">\n                  <TextField\n                    multiline\n                    rows={3}\n                    fullWidth\n                    label=\"Description\"\n                    variant=\"outlined\"\n                    value={section.description}\n                    onChange={e =>\n                      setSection({ ...section, description: e.target.value })\n                    }\n                  />\n                </Box>\n              </Box>\n\n              <Box\n                p={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                borderBottom=\"1px solid grey\"\n              >\n                <Box marginRight=\"10px\">\n                  <Typography variant=\"h6\">\n                    <strong>Start Date: </strong>\n                  </Typography>\n                </Box>\n                <Box flexGrow={1} textAlign=\"left\">\n                  <TextField\n                    variant=\"outlined\"\n                    type=\"date\"\n                    value={section.date}\n                    onChange={e =>\n                      setSection({ ...section, date: e.target.value })\n                    }\n                  />\n                </Box>\n              </Box>\n\n              <Box\n                p={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                borderBottom=\"1px solid grey\"\n              >\n                <Box marginRight=\"10px\">\n                  <Typography variant=\"h6\">\n                    <strong>Start Time: </strong>\n                  </Typography>\n                </Box>\n                <Box flexGrow={1} textAlign=\"left\">\n                  <TextField\n                    variant=\"outlined\"\n                    type=\"time\"\n                    value={section.start_time}\n                    onChange={e =>\n                      setSection({ ...section, start_time: e.target.value })\n                    }\n                  />\n                </Box>\n              </Box>\n\n              <Box\n                p={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                borderBottom=\"1px solid grey\"\n              >\n                <Box marginRight=\"10px\">\n                  <Typography variant=\"h6\">\n                    <strong>End Time: </strong>\n                  </Typography>\n                </Box>\n                <Box flexGrow={1} textAlign=\"left\">\n                  <TextField\n                    variant=\"outlined\"\n                    type=\"time\"\n                    value={section.end_time}\n                    onChange={e =>\n                      setSection({ ...section, end_time: e.target.value })\n                    }\n                  />\n                </Box>\n              </Box>\n\n              <Box padding={2} display=\"flex\" flexDirection=\"column\">\n                <Button\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  className={classes.button}\n                  startIcon={<SaveAltIcon />}\n                  onClick={saveHandler}\n                >\n                  Save\n                </Button>\n              </Box>\n            </form>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </CssBaseline>\n    </>\n  );\n};\n\nexport default AddSection;\n","import React, { useState } from 'react';\nimport moment from 'moment';\nimport axios from 'axios';\n\nimport {\n  Typography,\n  CssBaseline,\n  Button,\n  Box,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nconst useStyles = makeStyles({\n  form: {\n    width: '100vw',\n  },\n  button: {\n    marginBottom: '15px',\n    width: '240px',\n  },\n});\n\nconst SectionsCard = props => {\n  const { sections, onUpdatedDataBase } = props;\n  // console.log(sections);\n  const classes = useStyles();\n\n  // Edit State\n  const [isInEditMode, setIsInEditMode] = useState(false);\n  const toggleIsInEditMode = () => setIsInEditMode(!isInEditMode);\n\n  // Local Section Info State\n  const [section, setSection] = useState({\n    class_id: sections.id,\n    class_name: sections.section_name,\n    description: sections.description,\n    date: sections.date,\n    start_time: sections.start_time,\n    end_time: sections.end_time,\n  });\n\n  const cancelHandler = e => {\n    setSection({\n      ...section,\n      class_id: sections.id,\n      class_name: sections.section_name,\n      description: sections.description,\n      date: sections.date,\n      start_time: sections.start_time,\n      end_time: sections.end_time,\n    });\n    toggleIsInEditMode();\n  };\n\n  const saveHandler = e => {\n    const data = {\n      class_id: section.class_id,\n      class_name: section.class_name,\n      description: section.description,\n      date: moment(section.date).format('YYYY-MM-DD'),\n      start_time: section.start_time,\n      end_time: section.end_time,\n    };\n    const dataJSON = JSON.stringify(data);\n    console.log('UPDATE SAVE: ', data);\n    axios({\n      method: 'put',\n      url: 'http://localhost:80/classes',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: dataJSON,\n    })\n      .then(function(response) {\n        console.log(response);\n        toggleIsInEditMode();\n        onUpdatedDataBase();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  const deleteConfirmation = e => {\n    confirmAlert({\n      title: 'Confirm to Delete',\n      message: 'Are you sure?',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: e => deleteHandler(e),\n        },\n        {\n          label: 'No',\n          onClick: () => {},\n        },\n      ],\n    });\n  };\n\n  const deleteHandler = e => {\n    const data = {\n      class_id: section.class_id,\n    };\n    const dataJSON = JSON.stringify(data);\n    // console.log(dataJSON);z\n    axios({\n      method: 'delete',\n      url: 'http://localhost:80/classes',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: dataJSON,\n    })\n      .then(function(response) {\n        console.log(response);\n        onUpdatedDataBase();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      <CssBaseline>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Box\n              className={classes.cardTitle}\n              bgcolor=\"rgba(186, 130, 159, .2)\"\n              borderRadius=\"8px\"\n              padding={3}\n              display=\"flex\"\n              justifyContent=\"space-around\"\n              alignItems=\"center\"\n              flexGrow={1}\n              flexWrap=\"wrap\"\n            >\n              <Box display=\"flex\" flexBasis=\"10%\" justifyContent=\"flex-end\">\n                <Typography variant=\"h4\">{sections.section_name}</Typography>\n              </Box>\n\n              <Box>\n                <Typography variant=\"h6\">Date: {sections.date}</Typography>\n                <Typography variant=\"h6\">\n                  Start Time: {sections.start_time || 'None Given'}\n                </Typography>\n              </Box>\n            </Box>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails display=\"flex\">\n            <form className={classes.form} noValidate autoComplete=\"off\">\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Class Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Class Name\"\n                      variant=\"outlined\"\n                      autoFocus\n                      value={section.class_name}\n                      onChange={e =>\n                        setSection({ ...section, class_name: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Class Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">\n                      {sections.section_name}\n                    </Typography>\n                  </Box>\n                </Box>\n              )}\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                  flexGrow={1}\n                >\n                  <Box\n                    flexGrow={1}\n                    marginRight=\"10px\"\n                    textAlign=\"left\"\n                    marginBottom=\"2px\"\n                    spacing={2}\n                  >\n                    <Typography variant=\"h6\">\n                      <strong>Description: </strong>\n                    </Typography>\n                    <Box textAlign=\"left\">\n                      <TextField\n                        multiline\n                        fullWidth\n                        label=\"Description\"\n                        variant=\"outlined\"\n                        value={section.description}\n                        onChange={e =>\n                          setSection({\n                            ...section,\n                            description: e.target.value,\n                          })\n                        }\n                      />\n                    </Box>\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  direction=\"column\"\n                  alignItems=\"flex-start\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\" textAlign=\"left\">\n                    <Typography variant=\"h6\">\n                      <strong>Description: </strong>\n                    </Typography>\n                    <Box variant=\"h6\" flexGrow={1} textAlign=\"left\">\n                      <Typography>{sections.description}</Typography>\n                    </Box>\n                  </Box>\n                </Box>\n              )}\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Start Date: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Date\"\n                      variant=\"outlined\"\n                      value={section.date}\n                      onChange={e =>\n                        setSection({ ...section, date: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Date: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{sections.date}</Typography>\n                  </Box>\n                </Box>\n              )}\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Start Time: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Start Time\"\n                      variant=\"outlined\"\n                      value={section.start_time}\n                      onChange={e =>\n                        setSection({ ...section, start_time: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Start Time: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{sections.start_time}</Typography>\n                  </Box>\n                </Box>\n              )}\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>End Time: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"End Time\"\n                      variant=\"outlined\"\n                      value={section.end_time}\n                      onChange={e =>\n                        setSection({ ...section, end_time: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>End Time: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{sections.end_time}</Typography>\n                  </Box>\n                </Box>\n              )}\n              {isInEditMode ? (\n                <Box padding={2} display=\"flex\" flexDirection=\"column\">\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<CancelOutlinedIcon />}\n                    onClick={e => cancelHandler(e)}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<SaveAltIcon />}\n                    onClick={saveHandler}\n                  >\n                    Save\n                  </Button>\n                </Box>\n              ) : (\n                <Box padding={2} display=\"flex\" flexDirection=\"column\">\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<EditIcon />}\n                    onClick={toggleIsInEditMode}\n                  >\n                    Edit\n                  </Button>\n                  <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<DeleteIcon />}\n                    className={classes.button}\n                    onClick={deleteConfirmation}\n                  >\n                    Delete {section.class_name}\n                  </Button>\n                </Box>\n              )}\n            </form>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </CssBaseline>\n    </>\n  );\n};\n\nexport default SectionsCard;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  box: {\n    display: 'flex',\n    flexGrow: '1',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    margin: '20px',\n  },\n});\n\nexport default function SortButtons(props) {\n  const classes = useStyles();\n  const {\n    onSortNameAsc,\n    onSortNameDesc,\n    onSortCreatedAsc,\n    onSortCreatedDesc,\n    onUpdatedDataBase,\n  } = props;\n\n  return (\n    <div>\n      <ButtonGroup className={classes.box} color=\"primary\">\n        <Button onClick={onSortNameAsc}>Class Name ↑</Button>\n        <Button onClick={onSortNameDesc}>Class Date ↑</Button>\n        <Button onClick={onSortCreatedAsc}>Created ↑</Button>\n        <Button onClick={onSortCreatedDesc}>Created ↓</Button>\n        <Button onClick={onUpdatedDataBase}>Reload</Button>\n      </ButtonGroup>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Grid, CssBaseline, Box, Paper, Typography } from '@material-ui/core';\nimport AddSection from './AddSection';\nimport SectionsCard from './SectionsCard';\nimport ButtonGroup from '../SingleComponents/ButtonGroupSections';\nimport SearchField from '../SingleComponents/SearchField';\n\n// Material UI\nconst EditSections = props => {\n  const {\n    sections,\n    onUpdatedDataBase,\n    onSortNameAsc,\n    onSortNameDesc,\n    onSortCreatedAsc,\n    onSortCreatedDesc,\n    searchFieldText,\n    onSearchSubmit,\n    query,\n  } = props;\n\n  return (\n    <div>\n      <CssBaseline>\n        <Grid container display=\"flex\" direction=\"column\" alignItems=\"center\">\n          <Grid item>\n            <SearchField\n              searchFieldText={searchFieldText}\n              sections={sections}\n              onSearchSubmit={onSearchSubmit}\n              query={query}\n            />\n          </Grid>\n\n          <ButtonGroup\n            onSortNameAsc={onSortNameAsc}\n            onSortNameDesc={onSortNameDesc}\n            onSortCreatedAsc={onSortCreatedAsc}\n            onSortCreatedDesc={onSortCreatedDesc}\n            sections={sections}\n            onUpdatedDataBase={onUpdatedDataBase}\n          />\n          <Grid item align=\"center\" xs={12} sm={10} md={8} lg={8} xl={8}>\n            <AddSection onUpdatedDataBase={onUpdatedDataBase} />\n\n            {sections.length > 0 ? (\n              <>\n                {sections.map(section => (\n                  <SectionsCard\n                    key={section.id}\n                    sections={section}\n                    onUpdatedDataBase={onUpdatedDataBase}\n                  />\n                ))}\n              </>\n            ) : (\n              <Box marginTop=\"30px\">\n                <Paper elevation={4}>\n                  <Typography variant=\"h5\">\n                    No results. Try your Search Again\n                  </Typography>\n                </Paper>\n              </Box>\n            )}\n          </Grid>\n        </Grid>\n      </CssBaseline>\n    </div>\n  );\n};\n\nexport default EditSections;\n","import React from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport EditSections from './EditSections';\n\nclass SectionsData extends React.Component {\n  state = {\n    sections: [],\n    query: '',\n  };\n\n  componentDidMount() {\n    this.fetchSections();\n  }\n\n  onUpdatedDataBase = () => {\n    this.fetchSections();\n  };\n\n  async fetchSections() {\n    try {\n      // const query = xyz\n      const url = 'http://localhost:80/classesCMS';\n      const response = await fetch(url);\n      // console.log('fetchSections response', response);\n      const data = await response.json();\n      // console.log('fetch data', data);\n      const sectionsData = data.classes.map(section => ({\n        id: section.class_id,\n        section_name: section.class_name,\n        description: section.description,\n        date: moment(section.date).format('MM-DD-YYYY'),\n        start_time: section.start_time,\n        end_time: section.end_time,\n      }));\n      // console.log('local data', SectionsData);\n      this.setState({ sections: sectionsData });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  onSortNameAsc = () => {\n    const newSections = [...this.state.sections];\n    newSections.sort(function(a, b) {\n      const nameA = a.section_name.toLowerCase();\n      const nameB = b.section_name.toLowerCase();\n      if (nameA > nameB) {\n        return 1;\n      }\n      if (nameA < nameB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newSections);\n    this.setState({ sections: newSections });\n  };\n\n  onSortNameDesc = () => {\n    const newSections = [...this.state.sections];\n    newSections.sort(function(a, b) {\n      const nameA = a.date.toLowerCase();\n      const nameB = b.date.toLowerCase();\n      if (nameA < nameB) {\n        return 1;\n      }\n      if (nameA > nameB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newSections);\n    this.setState({ sections: newSections });\n  };\n\n  onSortCreatedAsc = () => {\n    const newSections = [...this.state.sections];\n    newSections.sort(function(a, b) {\n      const numA = a.id;\n      const numB = b.id;\n      if (numA > numB) {\n        return 1;\n      }\n      if (numA < numB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ sections: newSections });\n  };\n\n  onSortCreatedDesc = () => {\n    const newSections = [...this.state.sections];\n    newSections.sort(function(a, b) {\n      const numA = a.id;\n      const numB = b.id;\n      if (numA < numB) {\n        return 1;\n      }\n      if (numA > numB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newSections);\n    this.setState({ sections: newSections });\n  };\n\n  searchFieldText = e => {\n    this.setState({ query: e.target.value });\n  };\n\n  onSearchSubmit = e => {\n    this.setState({ sections: [] });\n    const search_query = this.state.query;\n    axios.get(`/classesQuery?q=${search_query}`).then(res => {\n      console.log(res);\n      const sectionsData = res.data.classes.map(section => ({\n        id: section.class_id,\n        section_name: section.class_name,\n        description: section.description,\n        date: moment(section.date).format('MM-DD-YYYY'),\n        start_time: section.start_time,\n        end_time: section.end_time,\n      }));\n      // console.log('board fetch: ', boardData);\n      this.setState({ sections: sectionsData });\n      this.setState({ query: '' });\n    });\n  };\n\n  render() {\n    const { sections, query } = this.state;\n\n    // let filteredSections = sections.filter(section => {\n    //   return section.last_name.indexOf(this.state.query) !== -1;\n    // });\n\n    return (\n      <div>\n        <EditSections\n          sections={sections}\n          onUpdatedDataBase={this.onUpdatedDataBase}\n          onSortNameAsc={this.onSortNameAsc}\n          onSortNameDesc={this.onSortNameDesc}\n          onSortCreatedAsc={this.onSortCreatedAsc}\n          onSortCreatedDesc={this.onSortCreatedDesc}\n          searchFieldText={this.searchFieldText}\n          onSearchSubmit={this.onSearchSubmit}\n          query={query}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SectionsData;\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport {\n  Typography,\n  CssBaseline,\n  Button,\n  Box,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nconst useStyles = makeStyles({\n  form: {\n    width: '100vw',\n  },\n  button: {\n    marginBottom: '15px',\n    width: '240px',\n  },\n});\n\nconst StudentCard = props => {\n  const { students, onUpdatedDataBase } = props;\n\n  const classes = useStyles();\n\n  // Edit State\n  const [isInEditMode, setIsInEditMode] = useState(false);\n  const toggleIsInEditMode = () => setIsInEditMode(!isInEditMode);\n\n  // Local Teacher Info State\n  const [student, setStudent] = useState({\n    first_name: students.first_name,\n    last_name: students.last_name,\n    guardian_first_name: students.guardian_first_name,\n    guardian_last_name: students.guardian_last_name,\n    student_DOB: students.student_DOB,\n    phone: students.phone,\n    email: students.email,\n    address: students.address,\n    city: students.city,\n    state: students.state,\n    zip: students.zip,\n    alt_first_name: students.alt_first_name,\n    alt_last_name: students.alt_last_name,\n    alt_phone: students.alt_phone,\n    photo_permission: students.photo_permission,\n    id: students.id,\n  });\n\n  const cancelHandler = e => {\n    setStudent({\n      ...student,\n      first_name: students.first_name,\n      last_name: students.last_name,\n      guardian_first_name: students.guardian_first_name,\n      guardian_last_name: students.guardian_last_name,\n      student_DOB: students.student_DOB,\n      phone: students.phone,\n      email: students.email,\n      address: students.address,\n      city: students.city,\n      state: students.state,\n      zip: students.zip,\n      alt_first_name: students.alt_first_name,\n      alt_last_name: students.alt_last_name,\n      alt_phone: students.alt_phone,\n      photo_permission: students.photo_permission,\n      id: students.id,\n    });\n    toggleIsInEditMode();\n  };\n\n  const saveHandler = e => {\n    const data = {\n      first_name: student.first_name,\n      last_name: student.last_name,\n      guardian_first_name: student.guardian_first_name,\n      guardian_last_name: student.guardian_last_name,\n      student_DOB: student.student_DOB,\n      phone: student.phone,\n      email: student.email,\n      address: student.address,\n      city: student.city,\n      state: student.state,\n      zip: student.zip,\n      alt_first_name: student.alt_first_name,\n      alt_last_name: student.alt_last_name,\n      alt_phone: student.alt_phone,\n      photo_permission: student.photo_permission,\n      id: student.id,\n    };\n    const dataJSON = JSON.stringify(data);\n    // console.log('UPDATE SAVE: ', data);\n    axios({\n      method: 'put',\n      url: 'http://localhost:80/students',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: dataJSON,\n    })\n      .then(function(response) {\n        console.log(response);\n        toggleIsInEditMode();\n        onUpdatedDataBase();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  const deleteConfirmation = e => {\n    confirmAlert({\n      title: 'Confirm to Delete',\n      message: 'Are you sure?',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: e => deleteHandler(e),\n        },\n        {\n          label: 'No',\n          onClick: () => {},\n        },\n      ],\n    });\n  };\n\n  const deleteHandler = e => {\n    const { id } = student;\n    const data = {\n      id,\n    };\n    const dataJSON = JSON.stringify(data);\n\n    axios({\n      method: 'delete',\n      url: 'http://localhost:80/students',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: dataJSON,\n    })\n      .then(function(response) {\n        console.log(response);\n        onUpdatedDataBase();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  // Able to map Inputs dynamically?\n  // {Object.entries(student).map(([key, value]) => (\n  //   <div key={student.id}></div>\n  // ))}\n\n  return (\n    <>\n      <CssBaseline>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Box\n              className={classes.cardTitle}\n              bgcolor=\"rgba(186, 130, 159, .2)\"\n              borderRadius=\"8px\"\n              padding={3}\n              display=\"flex\"\n              justifyContent=\"center\"\n              flexGrow={1}\n            >\n              <Typography variant=\"h4\">\n                {students.first_name} {students.last_name}\n              </Typography>\n            </Box>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails display=\"flex\">\n            <form className={classes.form} noValidate autoComplete=\"off\">\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>First Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"First Name\"\n                      variant=\"outlined\"\n                      autoFocus\n                      value={student.first_name}\n                      onChange={e =>\n                        setStudent({ ...student, first_name: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>First Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{students.first_name}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Last Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Last Name\"\n                      variant=\"outlined\"\n                      value={student.last_name}\n                      onChange={e =>\n                        setStudent({ ...student, last_name: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Last Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box>\n                    <Typography variant=\"h6\">{students.last_name}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Guardian First: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"First Name\"\n                      variant=\"outlined\"\n                      value={student.guardian_first_name || ''}\n                      onChange={e =>\n                        setStudent({\n                          ...student,\n                          guardian_first_name: e.target.value,\n                        })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Guardian First: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">\n                      {students.guardian_first_name}\n                    </Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Guardian Last: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Last Name\"\n                      variant=\"outlined\"\n                      value={student.guardian_last_name || ''}\n                      onChange={e =>\n                        setStudent({\n                          ...student,\n                          guardian_last_name: e.target.value,\n                        })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Guardian Last: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">\n                      {students.guardian_last_name}\n                    </Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Student DOB: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      variant=\"outlined\"\n                      type=\"date\"\n                      value={student.student_DOB || ''}\n                      onChange={e =>\n                        setStudent({\n                          ...student,\n                          student_DOB: e.target.value,\n                        })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Student DOB: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{students.student_DOB}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Phone: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Phone\"\n                      variant=\"outlined\"\n                      value={student.phone}\n                      onChange={e =>\n                        setStudent({ ...student, phone: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Phone: </strong>\n                    </Typography>\n                  </Box>\n                  <Box>\n                    <Typography variant=\"h6\">{students.phone}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Email: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Email\"\n                      variant=\"outlined\"\n                      value={student.email}\n                      onChange={e =>\n                        setStudent({ ...student, email: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Email: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{students.email}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Address: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Address\"\n                      variant=\"outlined\"\n                      value={student.address}\n                      onChange={e =>\n                        setStudent({ ...student, address: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Address: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{students.address}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>City: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"City\"\n                      variant=\"outlined\"\n                      value={student.city}\n                      onChange={e =>\n                        setStudent({ ...student, city: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>City: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{students.city}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>State: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"State\"\n                      variant=\"outlined\"\n                      value={student.state}\n                      onChange={e =>\n                        setStudent({ ...student, state: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>State: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{students.state}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Zip: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Zip\"\n                      variant=\"outlined\"\n                      value={student.zip}\n                      onChange={e =>\n                        setStudent({ ...student, zip: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Zip: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{students.zip}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Alt First: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Alt First\"\n                      variant=\"outlined\"\n                      value={student.alt_first_name}\n                      onChange={e =>\n                        setStudent({\n                          ...student,\n                          alt_first_name: e.target.value,\n                        })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Alt First: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">\n                      {students.alt_first_name}\n                    </Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Alt Last: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Alt Last\"\n                      variant=\"outlined\"\n                      value={student.alt_last_name}\n                      onChange={e =>\n                        setStudent({\n                          ...student,\n                          alt_last_name: e.target.value,\n                        })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Alt Last: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">\n                      {students.alt_last_name}\n                    </Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Alt Phone: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Alt Phone\"\n                      variant=\"outlined\"\n                      value={student.alt_phone}\n                      onChange={e =>\n                        setStudent({\n                          ...student,\n                          alt_phone: e.target.value,\n                        })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Alt Phone: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{students.alt_phone}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Photo Perm: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Photo Perm\"\n                      variant=\"outlined\"\n                      value={student.photo_permission}\n                      onChange={e =>\n                        setStudent({\n                          ...student,\n                          photo_permission: e.target.value,\n                        })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Photo Perm: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">\n                      {students.photo_permission}\n                    </Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box padding={2} display=\"flex\" flexDirection=\"column\">\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<CancelOutlinedIcon />}\n                    onClick={e => cancelHandler(e)}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<SaveAltIcon />}\n                    onClick={saveHandler}\n                  >\n                    Save\n                  </Button>\n                </Box>\n              ) : (\n                <Box padding={2} display=\"flex\" flexDirection=\"column\">\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<EditIcon />}\n                    onClick={toggleIsInEditMode}\n                  >\n                    Edit\n                  </Button>\n                  <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<DeleteIcon />}\n                    className={classes.button}\n                    onClick={deleteConfirmation}\n                  >\n                    Delete {students.first_name} {students.last_name}\n                  </Button>\n                </Box>\n              )}\n            </form>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </CssBaseline>\n    </>\n  );\n};\n\nexport default StudentCard;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  box: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    margin: '15px',\n  },\n});\n\nexport default function SortButtons(props) {\n  const classes = useStyles();\n  const {\n    onSortNameAsc,\n    onSortNameDesc,\n    onSortCreatedAsc,\n    onSortCreatedDesc,\n    onUpdatedDataBase,\n    students,\n  } = props;\n\n  const emails = students.map(student => {\n    return `${student.email}`;\n  });\n\n  return (\n    <div>\n      <ButtonGroup className={classes.box} color=\"primary\">\n        <Button onClick={onSortNameAsc}>Last Name ↑</Button>\n        <Button onClick={onSortNameDesc}>Last Name ↓</Button>\n        <Button onClick={onSortCreatedAsc}>Created ↑</Button>\n        <Button onClick={onSortCreatedDesc}>Created ↓</Button>\n        <Button onClick={onUpdatedDataBase}>Reload</Button>\n        <Button variant=\"outlined\">\n          <a\n            style={{ textDecoration: 'none', color: '#DC6866' }}\n            href={`mailto:?bcc=${emails}`}\n          >\n            Email ALL\n          </a>\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Grid, CssBaseline, Box, Paper, Typography } from '@material-ui/core';\nimport StudentCard from './StudentCard';\nimport ButtonGroup from '../SingleComponents/ButtonGroupStudents';\nimport SearchField from '../SingleComponents/SearchField';\n\n// Material UI\nconst EditStudents = props => {\n  const {\n    students,\n    onUpdatedDataBase,\n    onSortNameAsc,\n    onSortNameDesc,\n    onSortCreatedAsc,\n    onSortCreatedDesc,\n    searchFieldText,\n    onSearchSubmit,\n    query,\n  } = props;\n\n  return (\n    <div>\n      <CssBaseline>\n        <Grid container display=\"flex\" direction=\"column\" alignItems=\"center\">\n          <Grid item>\n            <SearchField\n              searchFieldText={searchFieldText}\n              students={students}\n              query={query}\n              onSearchSubmit={onSearchSubmit}\n            />\n          </Grid>\n\n          <ButtonGroup\n            onSortNameAsc={onSortNameAsc}\n            onSortNameDesc={onSortNameDesc}\n            onSortCreatedAsc={onSortCreatedAsc}\n            onSortCreatedDesc={onSortCreatedDesc}\n            onUpdatedDataBase={onUpdatedDataBase}\n            students={students}\n          />\n          <Grid item align=\"center\" xs={12} sm={10} md={8} lg={8} xl={8}>\n            {students.length > 0 ? (\n              <>\n                {students.map(student => (\n                  <StudentCard\n                    key={student.id}\n                    students={student}\n                    onUpdatedDataBase={onUpdatedDataBase}\n                  />\n                ))}\n              </>\n            ) : (\n              <Box marginTop=\"30px\">\n                <Paper elevation={4}>\n                  <Typography variant=\"h5\">\n                    No results. Try your Search Again\n                  </Typography>\n                </Paper>\n              </Box>\n            )}\n          </Grid>\n        </Grid>\n      </CssBaseline>\n    </div>\n  );\n};\n\nexport default EditStudents;\n","import React from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport EditStudents from './EditStudents';\n\nclass StudentsData extends React.Component {\n  state = {\n    students: [],\n    query: '',\n  };\n\n  componentDidMount() {\n    this.fetchStudents();\n  }\n\n  onUpdatedDataBase = () => {\n    this.fetchStudents();\n  };\n\n  async fetchStudents() {\n    try {\n      const url = 'http://localhost:80/students';\n      const response = await fetch(url);\n      const data = await response.json();\n      // console.log(data);\n      const studentsData = data.students.map(student => ({\n        id: student.id,\n        first_name: student.first_name,\n        last_name: student.last_name,\n        guardian_first_name: student.guardian_first_name,\n        guardian_last_name: student.guardian_last_name,\n        student_DOB: moment(student.student_DOB).format('MM-DD-YYYY'),\n        phone: student.phone,\n        email: student.email,\n        address: student.address,\n        city: student.city,\n        state: student.state,\n        zip: student.zip,\n        alt_first_name: student.alt_first_name,\n        alt_last_name: student.alt_last_name,\n        alt_phone: student.alt_phone,\n        photo_permission: student.photo_permission,\n      }));\n      // console.log(studentsData);\n      this.setState({ students: studentsData });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  onSortNameAsc = () => {\n    const newStudents = [...this.state.students];\n    newStudents.sort(function(a, b) {\n      const nameA = a.last_name.toLowerCase();\n      const nameB = b.last_name.toLowerCase();\n      if (nameA > nameB) {\n        return 1;\n      }\n      if (nameA < nameB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ students: newStudents });\n  };\n\n  onSortNameDesc = () => {\n    const newStudents = [...this.state.students];\n    newStudents.sort(function(a, b) {\n      const nameA = a.last_name.toLowerCase();\n      const nameB = b.last_name.toLowerCase();\n      if (nameA < nameB) {\n        return 1;\n      }\n      if (nameA > nameB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ students: newStudents });\n  };\n\n  onSortCreatedAsc = () => {\n    const newStudents = [...this.state.students];\n    newStudents.sort(function(a, b) {\n      const numA = a.id;\n      const numB = b.id;\n      if (numA > numB) {\n        return 1;\n      }\n      if (numA < numB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ students: newStudents });\n  };\n\n  onSortCreatedDesc = () => {\n    const newStudents = [...this.state.students];\n    newStudents.sort(function(a, b) {\n      const numA = a.id;\n      const numB = b.id;\n      if (numA < numB) {\n        return 1;\n      }\n      if (numA > numB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ students: newStudents });\n  };\n\n  searchFieldText = e => {\n    this.setState({ query: e.target.value });\n  };\n\n  onSearchSubmit = e => {\n    this.setState({ students: [] });\n    const search_query = this.state.query;\n    axios.get(`/studentsQuery?q=${search_query}`).then(res => {\n      // console.log(res);\n      const studentsData = res.data.students.map(student => ({\n        id: student.id,\n        first_name: student.first_name,\n        last_name: student.last_name,\n        guardian_first_name: student.guardian_first_name,\n        guardian_last_name: student.guardian_last_name,\n        student_DOB: moment(student.student_DOB).format('MM-DD-YYYY'),\n        phone: student.phone,\n        email: student.email,\n        address: student.address,\n        city: student.city,\n        state: student.state,\n        zip: student.zip,\n        alt_first_name: student.alt_first_name,\n        alt_last_name: student.alt_last_name,\n        alt_phone: student.alt_phone,\n        photo_permission: student.photo_permission,\n      }));\n      // console.log('board fetch: ', boardData);\n      this.setState({ students: studentsData });\n      this.setState({ query: '' });\n    });\n  };\n\n  render() {\n    const { students, query } = this.state;\n    return (\n      <div>\n        <EditStudents\n          students={students}\n          onUpdatedDataBase={this.onUpdatedDataBase}\n          onSortNameAsc={this.onSortNameAsc}\n          onSortNameDesc={this.onSortNameDesc}\n          onSortCreatedAsc={this.onSortCreatedAsc}\n          onSortCreatedDesc={this.onSortCreatedDesc}\n          searchFieldText={this.searchFieldText}\n          onSearchSubmit={this.onSearchSubmit}\n          query={query}\n        />\n      </div>\n    );\n  }\n}\n\nexport default StudentsData;\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport {\n  Typography,\n  CssBaseline,\n  Button,\n  Box,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nconst useStyles = makeStyles({\n  form: {\n    width: '100%',\n  },\n  button: {\n    marginBottom: '15px',\n    width: '240px',\n  },\n});\n\nconst TeacherCard = props => {\n  const { teachers, onUpdatedDataBase } = props;\n\n  const classes = useStyles();\n\n  // Edit State\n  const [isInEditMode, setIsInEditMode] = useState(false);\n  const toggleIsInEditMode = () => setIsInEditMode(!isInEditMode);\n\n  // Local Teacher Info State\n  const [teacher, setTeacher] = useState({\n    first_name: teachers.first_name,\n    last_name: teachers.last_name,\n    bio: teachers.bio,\n    id: teachers.id,\n  });\n\n  const cancelHandler = e => {\n    setTeacher({\n      ...teacher,\n      first_name: teachers.first_name,\n      last_name: teachers.last_name,\n      bio: teachers.bio,\n      id: teachers.id,\n    });\n    toggleIsInEditMode();\n  };\n\n  const saveHandler = e => {\n    const { first_name, last_name, bio, id } = teacher;\n    const data = {\n      first_name,\n      last_name,\n      bio,\n      id,\n    };\n    const dataJSON = JSON.stringify(data);\n    // console.log('UPDATE SAVE: ', data);\n    axios({\n      method: 'put',\n      url: 'http://localhost:80/teachers',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: dataJSON,\n    })\n      .then(function(response) {\n        console.log(response);\n        toggleIsInEditMode();\n        onUpdatedDataBase();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  const deleteConfirmation = e => {\n    confirmAlert({\n      title: 'Confirm to Delete',\n      message: 'Are you sure?',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: e => deleteHandler(e),\n        },\n        {\n          label: 'No',\n          onClick: () => {},\n        },\n      ],\n    });\n  };\n\n  const deleteHandler = e => {\n    const { id } = teacher;\n    const data = {\n      id,\n    };\n    const dataJSON = JSON.stringify(data);\n\n    axios({\n      method: 'delete',\n      url: 'http://localhost:80/teachers',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: dataJSON,\n    })\n      .then(function(response) {\n        console.log(response);\n        onUpdatedDataBase();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      <CssBaseline>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Box\n              className={classes.cardTitle}\n              bgcolor=\"rgba(186, 130, 159, .2)\"\n              borderRadius=\"8px\"\n              padding={3}\n              display=\"flex\"\n              justifyContent=\"center\"\n              flexGrow={1}\n            >\n              <Typography variant=\"h4\">\n                {teachers.first_name} {teachers.last_name}\n              </Typography>\n            </Box>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails display=\"flex\">\n            <form className={classes.form} noValidate autoComplete=\"off\">\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>First Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"First Name\"\n                      variant=\"outlined\"\n                      autoFocus\n                      value={teacher.first_name}\n                      onChange={e =>\n                        setTeacher({ ...teacher, first_name: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>First Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <Typography variant=\"h6\">{teachers.first_name}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>First Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      label=\"Last Name\"\n                      variant=\"outlined\"\n                      value={teacher.last_name}\n                      onChange={e =>\n                        setTeacher({ ...teacher, last_name: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Last Name: </strong>\n                    </Typography>\n                  </Box>\n                  <Box>\n                    <Typography variant=\"h6\">{teachers.last_name}</Typography>\n                  </Box>\n                </Box>\n              )}\n\n              {isInEditMode ? (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  borderBottom=\"1px solid grey\"\n                  className={classes.bioBox}\n                  flexGrow={1}\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Bio: </strong>\n                    </Typography>\n                  </Box>\n                  <Box flexGrow={1} textAlign=\"left\">\n                    <TextField\n                      multiline\n                      rows={3}\n                      fullWidth\n                      className={classes.bioSection}\n                      label=\"Bio\"\n                      variant=\"outlined\"\n                      value={teacher.bio}\n                      onChange={e =>\n                        setTeacher({ ...teacher, bio: e.target.value })\n                      }\n                    />\n                  </Box>\n                </Box>\n              ) : (\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  flexDirection=\"column\"\n                  alignItems=\"flex-start\"\n                  borderBottom=\"1px solid grey\"\n                >\n                  <Box marginRight=\"10px\">\n                    <Typography variant=\"h6\">\n                      <strong>Bio: </strong>\n                    </Typography>\n                  </Box>\n                  <Box variant=\"h6\" flexGrow={1} textAlign=\"left\" padding={1}>\n                    <Typography>{teachers.bio}</Typography>\n                  </Box>\n                </Box>\n              )}\n              {isInEditMode ? (\n                <Box padding={2} display=\"flex\" flexDirection=\"column\">\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<CancelOutlinedIcon />}\n                    onClick={e => cancelHandler(e)}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<SaveAltIcon />}\n                    onClick={saveHandler}\n                  >\n                    Save\n                  </Button>\n                </Box>\n              ) : (\n                <Box padding={2} display=\"flex\" flexDirection=\"column\">\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<EditIcon />}\n                    onClick={toggleIsInEditMode}\n                  >\n                    Edit\n                  </Button>\n                  <Button\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<DeleteIcon />}\n                    className={classes.button}\n                    onClick={deleteConfirmation}\n                  >\n                    Delete {teachers.first_name} {teachers.last_name}\n                  </Button>\n                </Box>\n              )}\n            </form>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </CssBaseline>\n    </>\n  );\n};\n\nexport default TeacherCard;\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\n// Material UI\nimport {\n  Typography,\n  CssBaseline,\n  Button,\n  Box,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles({\n  form: {\n    width: '100%',\n  },\n  button: {\n    marginBottom: '15px',\n    width: '240px',\n  },\n});\n\nconst AddTeacher = props => {\n  const { onUpdatedDataBase } = props;\n  const classes = useStyles();\n\n  const [teacher, setTeacher] = useState({\n    first_name: '',\n    last_name: '',\n    bio: '',\n  });\n\n  const saveHandler = e => {\n    const { first_name, last_name, bio } = teacher;\n    const data = {\n      first_name,\n      last_name,\n      bio,\n    };\n    const dataJSON = JSON.stringify(data);\n    console.log(data);\n\n    axios({\n      method: 'post',\n      url: 'http://localhost:80/teachers',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: dataJSON,\n    })\n      .then(function(response) {\n        console.log(response);\n        setTeacher({ first_name: '', last_name: '', bio: '' });\n        onUpdatedDataBase();\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      <CssBaseline>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Box\n              className={classes.cardTitle}\n              bgcolor=\"rgba(186, 130, 159, .2)\"\n              borderRadius=\"8px\"\n              padding={3}\n              display=\"flex\"\n              justifyContent=\"center\"\n              flexGrow={1}\n            >\n              <Typography variant=\"h4\">Add A Teacher</Typography>\n            </Box>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <form className={classes.form} noValidate autoComplete=\"off\">\n              <Box\n                p={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                borderBottom=\"1px solid grey\"\n              >\n                <Box marginRight=\"10px\">\n                  <Typography variant=\"h6\">\n                    <strong>First Name: </strong>\n                  </Typography>\n                </Box>\n                <Box flexGrow={1} textAlign=\"left\">\n                  <TextField\n                    label=\"First Name\"\n                    variant=\"outlined\"\n                    autoFocus\n                    value={teacher.first_name}\n                    onChange={e =>\n                      setTeacher({ ...teacher, first_name: e.target.value })\n                    }\n                    placeholder=\"First Name\"\n                  />\n                </Box>\n              </Box>\n              <Box\n                p={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                borderBottom=\"1px solid grey\"\n              >\n                <Box marginRight=\"10px\">\n                  <Typography variant=\"h6\">\n                    <strong>Last Name: </strong>\n                  </Typography>\n                </Box>\n                <Box flexGrow={1} textAlign=\"left\">\n                  <TextField\n                    label=\"Last Name\"\n                    variant=\"outlined\"\n                    autoFocus\n                    value={teacher.last_name}\n                    onChange={e =>\n                      setTeacher({ ...teacher, last_name: e.target.value })\n                    }\n                    placeholder=\"Last Name\"\n                  />\n                </Box>\n              </Box>\n\n              <Box\n                p={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                borderBottom=\"1px solid grey\"\n                className={classes.bioBox}\n                flexGrow={1}\n              >\n                <Box marginRight=\"10px\">\n                  <Typography variant=\"h6\">\n                    <strong>Bio: </strong>\n                  </Typography>\n                </Box>\n                <Box flexGrow={1} textAlign=\"left\">\n                  <TextField\n                    multiline\n                    rows={3}\n                    fullWidth\n                    className={classes.bioSection}\n                    label=\"Bio\"\n                    variant=\"outlined\"\n                    autoFocus\n                    value={teacher.bio}\n                    onChange={e =>\n                      setTeacher({ ...teacher, bio: e.target.value })\n                    }\n                    placeholder=\"Bio\"\n                  />\n                </Box>\n              </Box>\n\n              <Box padding={2}>\n                <Button\n                  size=\"large\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  startIcon={<SaveAltIcon />}\n                  className={classes.button}\n                  onClick={saveHandler}\n                >\n                  Save New Teacher\n                </Button>\n              </Box>\n            </form>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </CssBaseline>\n    </>\n  );\n};\n\nexport default AddTeacher;\n","import React from 'react';\nimport { Grid, CssBaseline, Box, Paper, Typography } from '@material-ui/core';\nimport TeacherCard from './TeacherCard';\nimport AddTeacher from './AddTeacher';\nimport ButtonGroup from '../SingleComponents/ButtonGroup';\nimport SearchField from '../SingleComponents/SearchField';\n\n// Material UI\n\nconst EditTeachers = props => {\n  const {\n    teachers,\n    onUpdatedDataBase,\n    onSortNameAsc,\n    onSortNameDesc,\n    onSortCreatedAsc,\n    onSortCreatedDesc,\n    searchFieldText,\n    onSearchSubmit,\n    query,\n  } = props;\n\n  return (\n    <div>\n      <CssBaseline>\n        <Grid container display=\"flex\" direction=\"column\" alignItems=\"center\">\n          <Grid item>\n            <SearchField\n              searchFieldText={searchFieldText}\n              teachers={teachers}\n              query={query}\n              onSearchSubmit={onSearchSubmit}\n            />\n          </Grid>\n\n          <ButtonGroup\n            onSortNameAsc={onSortNameAsc}\n            onSortNameDesc={onSortNameDesc}\n            onSortCreatedAsc={onSortCreatedAsc}\n            onSortCreatedDesc={onSortCreatedDesc}\n            onUpdatedDataBase={onUpdatedDataBase}\n          />\n          <Grid item align=\"center\" xs={12} sm={10} md={8} lg={8} xl={8}>\n            <AddTeacher onUpdatedDataBase={onUpdatedDataBase} />\n\n            {teachers.length > 0 ? (\n              <>\n                {teachers.map(teacher => (\n                  <TeacherCard\n                    key={teacher.id}\n                    teachers={teacher}\n                    onUpdatedDataBase={onUpdatedDataBase}\n                  />\n                ))}\n              </>\n            ) : (\n              <Box marginTop=\"30px\">\n                <Paper elevation={4}>\n                  <Typography variant=\"h5\">\n                    No results. Try your Search Again\n                  </Typography>\n                </Paper>\n              </Box>\n            )}\n          </Grid>\n        </Grid>\n      </CssBaseline>\n    </div>\n  );\n};\n\nexport default EditTeachers;\n","import React from 'react';\nimport axios from 'axios';\nimport EditTeachers from './EditTeachers';\n\nclass TeachersData extends React.Component {\n  state = {\n    teachers: [],\n    query: '',\n  };\n\n  componentDidMount() {\n    this.fetchTeachers();\n  }\n\n  onUpdatedDataBase = () => {\n    this.fetchTeachers();\n  };\n\n  async fetchTeachers() {\n    try {\n      const url = 'http://localhost:80/teachersCMS';\n      const response = await fetch(url);\n      const data = await response.json();\n      // console.log(data);\n      const teacherData = data.teachers.map(teacher => ({\n        id: teacher.id,\n        first_name: teacher.first_name,\n        last_name: teacher.last_name,\n        bio: teacher.bio,\n      }));\n      // console.log(teacherData);\n      this.setState({ teachers: teacherData });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  onSortNameAsc = () => {\n    const newTeachers = [...this.state.teachers];\n    newTeachers.sort(function(a, b) {\n      const nameA = a.last_name.toLowerCase();\n      const nameB = b.last_name.toLowerCase();\n      if (nameA > nameB) {\n        return 1;\n      }\n      if (nameA < nameB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ teachers: newTeachers });\n  };\n\n  onSortNameDesc = () => {\n    const newTeachers = [...this.state.teachers];\n    newTeachers.sort(function(a, b) {\n      const nameA = a.last_name.toLowerCase();\n      const nameB = b.last_name.toLowerCase();\n      if (nameA < nameB) {\n        return 1;\n      }\n      if (nameA > nameB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ teachers: newTeachers });\n  };\n\n  onSortCreatedAsc = () => {\n    const newTeachers = [...this.state.teachers];\n    newTeachers.sort(function(a, b) {\n      const numA = a.id;\n      const numB = b.id;\n      if (numA > numB) {\n        return 1;\n      }\n      if (numA < numB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ teachers: newTeachers });\n  };\n\n  onSortCreatedDesc = () => {\n    const newTeachers = [...this.state.teachers];\n    newTeachers.sort(function(a, b) {\n      const numA = a.id;\n      const numB = b.id;\n      if (numA < numB) {\n        return 1;\n      }\n      if (numA > numB) {\n        return -1;\n      }\n      return 0;\n    });\n    // console.log(newStudents);\n    this.setState({ teachers: newTeachers });\n  };\n\n  searchFieldText = e => {\n    this.setState({ query: e.target.value });\n  };\n\n  onSearchSubmit = e => {\n    this.setState({ teachers: [] });\n    const search_query = this.state.query;\n    axios.get(`/teachersQuery?q=${search_query}`).then(res => {\n      console.log(res);\n      const teachersData = res.data.teachers.map(teacher => ({\n        id: teacher.id,\n        first_name: teacher.first_name,\n        last_name: teacher.last_name,\n        bio: teacher.bio,\n      }));\n      // console.log('board fetch: ', boardData);\n      this.setState({ teachers: teachersData });\n      this.setState({ query: '' });\n    });\n  };\n\n  render() {\n    const { teachers, query } = this.state;\n    // console.log('in render: ', teachers);\n    return (\n      <div>\n        <EditTeachers\n          teachers={teachers}\n          onUpdatedDataBase={this.onUpdatedDataBase}\n          onSortNameAsc={this.onSortNameAsc}\n          onSortNameDesc={this.onSortNameDesc}\n          onSortCreatedAsc={this.onSortCreatedAsc}\n          onSortCreatedDesc={this.onSortCreatedDesc}\n          searchFieldText={this.searchFieldText}\n          onSearchSubmit={this.onSearchSubmit}\n          query={query}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TeachersData;\n","import React from 'react';\n\n// Material UI\nimport 'typeface-roboto';\n\nimport { Grid, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 120,\n    width: 240,\n  },\n  top: {\n    borderBottom: '1px solid #DC6866',\n    backgroundColor: '#679488',\n    color: 'white',\n  },\n  bottom: {\n    marginTop: '20px',\n  },\n}));\n\nfunction Panel() {\n  const classes = useStyles();\n  return (\n    <div>\n      <Grid\n        container\n        display=\"flex\"\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ minHeight: '85vh' }}\n      >\n        <Grid\n          item\n          display=\"flex\"\n          align=\"center\"\n          xs={12}\n          sm={8}\n          md={8}\n          lg={4}\n          xl={4}\n        >\n          <Paper variant=\"outlined\" className={classes.paper}>\n            <Typography className={classes.top} variant=\"h5\">\n              Admin Panel\n            </Typography>\n            <Typography align=\"center\" className={classes.bottom} variant=\"h6\">\n              Navigate with Menu\n            </Typography>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Panel;\n","import React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport checkAuth from './auth/checkAuth'\n\n// Material UI\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport 'typeface-roboto';\n\n// Components\nimport Navigation from './Components/Navigation/Navigation';\nimport Login from './Components/Auth/Login';\nimport Board from './Components/Board/BoardData';\nimport Sections from './Components/Sections/SectionsData';\nimport Students from './Components/Students/StudentsData';\nimport Teachers from './Components/Teachers/TeachersData';\nimport Panel from './Components/Panel';\n\nclass App extends React.Component {\n\n  theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#679488',\n      },\n      secondary: {\n        main: '#AD7994',\n      },\n    },\n  });\n\n  ProtectedRoute = ({ component: Component, ...rest }) => {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          checkAuth() ? (\n            <Component {...props} />\n          ) : (\n            <Redirect to=\"/admin/login\" />\n          )\n        }\n      />\n    );\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <ThemeProvider theme={this.theme}>\n          <Navigation/>\n          <Switch>\n            <Route\n              path=\"/admin/login\"\n              render={props => (\n                <Login\n                  {...props}\n                />\n              )}\n            />\n            <this.ProtectedRoute exact path=\"/admin\" component={Panel} />\n            <this.ProtectedRoute path=\"/admin/board\" component={Board} />\n            <this.ProtectedRoute path=\"/admin/classes\" component={Sections} />\n            <this.ProtectedRoute path=\"/admin/students\" component={Students} />\n            <this.ProtectedRoute path=\"/admin/teachers\" component={Teachers} />\n            <Route component={() => '404 Not Found'} />\n          </Switch>\n        </ThemeProvider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}